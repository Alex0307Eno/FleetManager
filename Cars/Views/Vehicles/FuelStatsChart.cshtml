@{
    ViewData["Title"] = "行車統計圖";
    Layout = "_Layout";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>

<style>
    :root {
        --panel: #fff;
        --border: #dbeafe;
        --title: #1e3a8a;
        --muted: #64748b;
    }

    .wrap {
        max-width: 1200px;
        margin: 18px auto;
        padding: 0 16px;
    }

    /* 控制列（照你截圖） */
    .toolbar {
        display: flex;
        gap: 10px;
        align-items: center;
        background: #eaf4ff;
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 10px;
    }

    .chip {
        display: flex;
        align-items: center;
        gap: 8px;
        background: #fff;
        border: 1px solid var(--border);
        border-radius: 999px;
        padding: 6px 10px;
    }

        .chip input[type="date"], .chip select {
            border: 0;
            outline: 0;
            background: transparent;
            font-size: 14px;
            min-width: 140px;
        }

    .search-btn {
        width: 36px;
        height: 36px;
        border-radius: 10px;
        border: 1px solid #c7d2fe;
        background: #fff;
        color: #1e40af;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* 兩張圖的外框 */
    .grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
        margin-top: 14px;
    }

    .card {
        background: var(--panel);
        border: 1px solid var(--border);
        border-radius: 14px;
    }

    .card-hd {
        padding: 12px 16px;
        text-align: center;
        color: var(--title);
        font-weight: 800;
        font-size: 20px;
    }

    .card-sub {
        margin-top: 4px;
        color: var(--muted);
        font-size: 12px;
    }

    .card-bd {
        padding: 10px 16px 16px;
    }

    canvas {
        width: 100%;
        height: 360px;
    }

    @@media (max-width: 980px) {
        .grid

    {
        grid-template-columns: 1fr;
    }

    }
</style>


<div id="app" class="wrap" v-cloak>
    <!-- 控制列 -->
    <div class="toolbar">
        <div class="chip">
            <input type="date" v-model="q.dateFrom">
        </div>
        <div class="chip">
            <input type="date" v-model="q.dateTo">
        </div>

        <div class="chip">
            <select v-model="q.longShort">
                <option value="">全部</option>
                <option value="長差">長差</option>
                <option value="短差">短差</option>
            </select>
        </div>

        <button class="search-btn" title="查詢" @@click="reload"><i class="fa-solid fa-magnifying-glass"></i></button>
    </div>

    <!-- 兩張圖 -->
    <div class="grid">
        <section class="card">
            <div class="card-hd">
                駕駛人統計
                <div class="card-sub">({{ rocRange }})</div>
            </div>
            <div class="card-bd">
                <canvas id="driverChart"></canvas>
            </div>
        </section>

        <section class="card">
            <div class="card-hd">
                車輛車號統計
                <div class="card-sub">({{ rocRange }})</div>
            </div>
            <div class="card-bd">
                <canvas id="vehicleChart"></canvas>
            </div>
        </section>
    </div>
</div>

@section Scripts {
    <script>
        const {createApp, ref, computed, onMounted} = Vue;
        createApp({
          setup(){
            // ================= 基本工具 =================
            const pad = n => String(n).padStart(2,'0');
            const toISO = d => `${d.getFullYear()}-${pad(d.getMonth()+1)}-${pad(d.getDate())}`;
            const toRoc = d => `${d.getFullYear()-1911}/${pad(d.getMonth()+1)}/${pad(d.getDate())}`;

            // 預設抓最近 14 天，跟你截圖的「一段區間」視覺一致
            const end = new Date();
            const start = new Date(); start.setDate(end.getDate()-13);

            const q = ref({
              dateFrom: toISO(start),
              dateTo:   toISO(end),
              longShort: '長差'     // 預設選「長差」；你也可改成 '' 顯示全部
            });

            const rows = ref([]);          // 從 API 來的明細
            let driverChart, vehicleChart; // Chart.js 實例

            // 顯示在標題下方的民國日期區間
            const rocRange = computed(()=>{
              if(!q.value.dateFrom || !q.value.dateTo) return '';
              const s = new Date(q.value.dateFrom), e = new Date(q.value.dateTo);
              return `${toRoc(s)}–${toRoc(e)}`;
            });

            // ================= 取資料 & 聚合 =================
            async function reload(){
              const res = await axios.get('/Vehicles/TripStats', { params:{
                dateFrom: q.value.dateFrom || null,
                dateTo:   q.value.dateTo   || null,
                longShort: q.value.longShort || null
              }});
              rows.value = res.data || [];
              drawCharts();
            }

            // 依欄位 group -> 取前 5 名
            function top5By(field){
              const map = {};
              rows.value.forEach(r=>{
                // 若有長短差條件，後端會先過一遍；這裡雙保險再過一次
                if(q.value.longShort && r.longShort !== q.value.longShort) return;
                const key = r[field] || '(未知)';
                if(!map[key]) map[key] = { km:0, trips:0 };
                map[key].km += Number(r.km||0);
                map[key].trips += Number(r.trips||0);
              });
              return Object.entries(map)          // [ [key,{km,trips}], ...]
                       .sort((a,b)=> b[1].km - a[1].km)
                       .slice(0,5);
            }

            // ================= 繪圖 =================
            function drawCharts(){
              const labelKm  = (q.value.longShort || '全部') + '行駛累計里程';
              const labelCnt = (q.value.longShort || '全部') + '行駛累計趟次';

              // 駕駛 Top5
              const driverTop = top5By('driverName');
              const dLabels = driverTop.map(x=>x[0]);
              const dKm     = driverTop.map(x=>x[1].km);
              const dTrips  = driverTop.map(x=>x[1].trips);

              const dCtx = document.getElementById('driverChart');
              if(driverChart) driverChart.destroy();
              driverChart = new Chart(dCtx, {
                type:'bar',
                data:{
                  labels: dLabels,
                  datasets:[
                    { label: labelKm,  data: dKm,    backgroundColor:'#2563eb' },
                    { label: labelCnt, data: dTrips, backgroundColor:'#f59e0b' }
                  ]
                },
                options:{
                  responsive:true,
                  maintainAspectRatio:false,
                  plugins:{ legend:{ position:'bottom' } },
                  scales:{ y:{ beginAtZero:true } }
                }
              });

              // 車牌 Top5
              const vehicleTop = top5By('plateNo');
              const vLabels = vehicleTop.map(x=>x[0]);
              const vKm     = vehicleTop.map(x=>x[1].km);
              const vTrips  = vehicleTop.map(x=>x[1].trips);

              const vCtx = document.getElementById('vehicleChart');
              if(vehicleChart) vehicleChart.destroy();
              vehicleChart = new Chart(vCtx, {
                type:'bar',
                data:{
                  labels: vLabels,
                  datasets:[
                    { label: labelKm,  data: vKm,    backgroundColor:'#2563eb' },
                    { label: labelCnt, data: vTrips, backgroundColor:'#f59e0b' }
                  ]
                },
                options:{
                  responsive:true,
                  maintainAspectRatio:false,
                  plugins:{ legend:{ position:'bottom' } },
                  scales:{ y:{ beginAtZero:true } }
                }
              });
            }

            onMounted(reload);

            return { q, reload, rocRange };
          }
        }).mount('#app');
    </script>
}
