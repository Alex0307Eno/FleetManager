@{
    ViewData["Title"] = "請假審核管理";
}
<head>
    <link rel="stylesheet" href="/css/Admin/LeaveReview.css" />
    <script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <div id="review-app" v-cloak>
        <h2>請假審核管理</h2>

        <div v-if="loading">讀取中...</div>
        <div v-else>
            <table class="leave-table">
                <thead>
                    <tr>
                        <th>姓名</th>
                        <th>假別</th>
                        <th>開始時間</th>
                        <th>結束時間</th>
                        <th>事由</th>
                        <th>狀態</th>
                        <th>代理人</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="l in leaves" :key="l.leaveId">
                        <td>{{ l.driverName }}</td>
                        <td>{{ l.leaveType }}</td>
                        <td>{{ fmt(l.start) }}</td>
                        <td>{{ fmt(l.end) }}</td>
                        <td>{{ l.reason }}</td>
                        <td>
                            <span class="status-badge" :class="statusClass(l.status)">
                                {{ l.status }}
                            </span>
                        </td>
                        <td>
                            <div v-if="l.status==='待審核'">
                                <select v-model="l.agentDriverId" @@focus ="loadDrivers(l)">
                                    <option disabled value="">請選擇代理人</option>
                                    <option v-for="d in l.availableAgents"
                                            :key="d.driverId"
                                            :value="d.driverId">
                                        {{ d.driverName }}
                                    </option>
                                </select>
                            </div>
                            <div v-else>
                                {{ l.agentDriverName || '-' }}
                            </div>
                        </td>

                        <td>
                            <button v-if="l.status==='待審核'"
                                    class="btn btn-approve"
                                    @@click ="updateStatus(l.leaveId,'核准', l.agentDriverId)">
                                核准
                            </button>
                            <button v-if="l.status==='待審核'"
                                    class="btn btn-reject"
                                    @@click ="updateStatus(l.leaveId,'駁回')">
                                駁回
                            </button>
                        </td>
                    </tr>
                    <tr v-if="!leaves.length">
                        <td colspan="8" style="text-align:center;color:#888">
                            目前沒有請假紀錄
                        </td>
                    </tr>
                </tbody>
            </table>
            <div v-if="showAffected" class="alert alert-warning mt-3 p-3 rounded">
                <h5>⚠ 有受影響的行程需重新指派：</h5>
                <table class="table table-sm table-bordered mt-2">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>駕駛</th>
                            <th>起訖時間</th>
                            <th>出發地</th>
                            <th>目的地</th>
                            <th>狀態</th>
                           
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="a in affectedList" :key="a.dispatchId">
                            <td>{{ a.dispatchId }}</td>
                            <td>{{ a.driverName }}</td>
                            <td>{{ fmt(a.start) }} → {{ fmt(a.end) }}</td>
                            <td>{{ a.origin }}</td>
                            <td>{{ a.destination }}</td>
                            <td>{{ a.dispatchStatus }}</td>
                            
                        </tr>
                    </tbody>
                </table>
            </div>




        </div>
    </div>

    <script>
        const { createApp, ref, onMounted } = Vue;

        createApp({
          setup() {
            const leaves = ref([]);
            const loading = ref(false);
            const affectedList = ref([]);
            const showAffected = ref(false);

            const pad = n => String(n).padStart(2, "0");
            const formatRoc = d => {
              const roc = d.getFullYear() - 1911;
              return `${roc}/${pad(d.getMonth() + 1)}/${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}`;
            };
            const fmt = dtStr => {
              const d = new Date(dtStr);
              return isNaN(d) ? "" : formatRoc(d);
            };
            const statusClass = s =>
              s === "核准" ? "s-approved" :
              s === "駁回" ? "s-reject" : "s-wait";
     
            async function loadLeaves() {
              loading.value = true;
              try {
                const res = await axios.get("/api/Leaves");
                leaves.value = (res.data || []).map(l => ({ ...l, availableAgents: [] }));
              } catch (err) {
                console.error("讀取請假紀錄失敗", err);
                leaves.value = [];
              } finally {
                loading.value = false;
              }
            }

            async function updateStatus(id, status, agentDriverId = null) {
              try {
                const res = await axios.post(`/api/Leaves/${id}/status`, { status, agentDriverId });
                alert(res.data?.message || `✅ 已更新為 ${status}`);
                affectedList.value = res.data?.affected || [];
                showAffected.value = affectedList.value.length > 0;
                await loadLeaves();
              } catch (err) {
                console.error("更新狀態失敗", err);
                alert(err.response?.data?.message || "❌ 更新失敗");
              }
            }

            async function loadDrivers(leave) {
              try {
                const res = await axios.get(`/api/Drivers/Agents?leaveId=${leave.leaveId}`);
                leave.availableAgents = res.data || [];
              } catch (err) {
                console.error("讀取代理人名單失敗", err);
                leave.availableAgents = [];
              }
            }

         

        async function loadAffectedList() {
          try {
            const res = await axios.get("/api/CarApplications/Affected");
            affectedList.value = res.data || [];
            showAffected.value = affectedList.value.length > 0;
          } catch (err) {
            console.error("讀取受影響行程失敗", err);
          }
        }

        onMounted(() => {
          loadLeaves();
          loadAffectedList(); 
        });



            return { leaves, loading, fmt, statusClass, updateStatus, loadDrivers, affectedList, showAffected, loadAffectedList };
          }
        }).mount("#review-app");
    </script>
</body>
