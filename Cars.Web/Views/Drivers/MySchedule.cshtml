@{
    ViewData["Title"] = "我的班表";
}
<link rel="stylesheet" href="/css/Driver/MySchedule.css" />
<!-- Vue 3 + axios（CDN） -->
<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<div id="app" class="wrap" v-cloak>
    <div class="topbar">
        <h1>我的值勤班表</h1>
        
    </div>

    <div class="grid">
        <!-- 左：主月曆 -->
        <section class="card">
            <div class="card-hd" style="gap:10px; align-items:center;">
                <button class="btn" @@click="gotoPrev">＜</button>
                <div>{{ headerText }}</div>
                <button class="btn" @@click="gotoNext">＞</button>
                <div class="seg">
                    <button class="seg-btn" :class="{active: viewMode==='month'}" @@click="viewMode='month'">每月</button>
                    <button class="seg-btn" :class="{active: viewMode==='week'}" @@click="viewMode='week'">每週</button>
                </div>
            </div>

            <!-- 月視圖 -->
            <div class="card-bd" v-if="viewMode==='month'">
                <div class="month-head">
                    <div v-for="w in ['週日','週一','週二','週三','週四','週五','週六']" :key="w">{{ w }}</div>
                </div>

                <div class="month-grid">
                    <div v-for="(cell,idx) in monthGrid" :key="idx" class="day">
                        <div class="day-hd" :class="{today: cell.isToday}">
                            <span>{{ cell.d || '' }}</span>
                        </div>

                        <template v-if="cell.d">
                            <span class="pill pill-dark"
                                  v-for="ev in dayEvents(cell.dateKey)"
                                  :key="ev.id"
                                  style="display:inline-block; margin-right:4px;"
                                  v-html="ev.title">
                            </span>


                            <div v-if="!dayEvents(cell.dateKey).length" class="blank"></div>
                        </template>
                    </div>
                </div>
            </div>

            <!-- 週視圖：當前所選月內含今天的那一週 -->
            <div class="card-bd" v-else>
                <table class="table">
                    <thead>
                        <tr>
                            <th style="width:80px">日期</th>
                            <th v-for="(d,i) in weekDays" :key="i">
                                {{ d.label }}
                                <div class="help mono">{{ d.date }}</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th>班次</th>
                            <td v-for="(d,i) in weekDays" :key="'w'+i">
                                <span v-for="ev in dayEvents(d.key)"
                                      :key="ev.id"
                                      class="pill"
                                      style="display:inline-block; margin-right:4px;"
                                      v-html="ev.title">
                                </span>


                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </section>

        <!-- 右：小月曆 + 班次摘要 -->
        <aside class="stack">
            <div class="card">
                <div class="card-hd">{{ rocYear }}年 {{ month }}月</div>
                <div class="card-bd">
                    <div class="mini-cal">
                        <div class="mini-head" v-for="w in ['日','一','二','三','四','五','六']" :key="w">{{ w }}</div>
                        <div v-for="n in firstWeekday" :key="'pad'+n"></div>
                        <div v-for="d in daysInMonth" :key="'d'+d"
                             class="mini-cell"
                             :class="{today:isToday(d), has: dayEvents(keyOf(d)).length}">
                            {{ d }}
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-hd">班次安排</div>
                <div class="card-bd">
                    <div class="help">本月各班別日期：</div>
                    <div v-for="(dates,code) in monthShiftGroups" :key="code" style="margin:6px 0;">
                        <b v-html="code"></b>：
                        <span v-if="dates.length">{{ dates.join('、') }}</span>
                        <span v-else class="help">（無）</span>
                    </div>
                </div>
            </div>
        </aside>
    </div>
</div>




<script>
const { createApp, ref, reactive, computed, watch } = Vue;

createApp({
  setup(){
    const today   = new Date();
    const anchor  = ref(new Date(today));     // 目前的「錨點」日期
    const year    = computed(()=> anchor.value.getFullYear());
    const month   = computed(()=> anchor.value.getMonth()+1);
    const viewMode = ref('month');

    // 事件快取：{ 'yyyy-MM-dd': [events...] }
    const eventsMap = reactive({});

    // ---- 工具 ----
    const pad2 = n => String(n).padStart(2,'0');
    const ymdKeyFromDate = (d) => `${d.getFullYear()}-${pad2(d.getMonth()+1)}-${pad2(d.getDate())}`;

    function keyOf(day){
      return `${year.value}-${pad2(month.value)}-${pad2(day)}`;
    }
    function dateKey(date){
      const dt = new Date(date);
      return ymdKeyFromDate(dt);
    }

    // ★ 以「週一」為一週的起點
    function mondayOfWeek(dLike){
      const d = new Date(dLike);
      d.setHours(0,0,0,0);
      const dow = d.getDay();              // 0=Sun,1=Mon,...6=Sat
      const delta = (dow + 6) % 7;         // 週一→0, 週二→1, ... 週日→6
      d.setDate(d.getDate() - delta);
      return d;
    }

    // ---- 抓資料：月 / 週 ----
    async function fetchMonth(){
      const start = new Date(anchor.value.getFullYear(), anchor.value.getMonth(), 1);
      const end   = new Date(anchor.value.getFullYear(), anchor.value.getMonth()+1, 1);
      const res = await axios.get('/api/Drivers/MySchedule/Events', { params: { start: start.toISOString(), end: end.toISOString() } });
      Object.keys(eventsMap).forEach(k => delete eventsMap[k]);
      (res.data || []).forEach(ev=>{
        const k = dateKey(ev.start);
        (eventsMap[k] ||= []).push(ev);
      });
    }

    async function fetchWeek(){
      const s = mondayOfWeek(anchor.value);  // ★用「週一」
      const e = new Date(s); e.setDate(s.getDate()+7);   // 半開 [s, e)
      const res = await axios.get('/api/Drivers/MySchedule/Events', { params: { start: s.toISOString(), end: e.toISOString() } });
      Object.keys(eventsMap).forEach(k => delete eventsMap[k]);
      (res.data || []).forEach(ev=>{
        const k = dateKey(ev.start);
        (eventsMap[k] ||= []).push(ev);
      });
    }

    // ====== 月曆計算 ======
    const rocYear       = computed(()=> year.value - 1911);
    const daysInMonth   = computed(()=> new Date(year.value, month.value, 0).getDate());
    const firstOfMonth  = computed(()=> new Date(year.value, month.value-1, 1));
    const firstWeekday  = computed(()=> firstOfMonth.value.getDay()); // 0..6 (Sun..Sat)
    const isToday       = d => (year.value===today.getFullYear() && month.value===today.getMonth()+1 && d===today.getDate());

    const monthGrid = computed(()=>{
      const arr=[];
      const startDay = firstOfMonth.value.getDay();
      for(let i=0;i<startDay;i++) arr.push({d:'',isToday:false,dateKey:''});
                                  for(let d=1; d<=daysInMonth.value; d++){
        arr.push({ d, isToday:isToday(d), dateKey: keyOf(d) });
      }
      while(arr.length<42) arr.push({d:'',isToday:false,dateKey:''});
      return arr;
    });

    function dayEvents(k) {
      const d = new Date(k);
      const dow = d.getDay(); // 0=週日, 6=週六
      if (dow === 0 || dow === 6) {
        // 週六、週日永遠沒有班表
        return [];
      }
      return eventsMap[k] || [];
    }

    // ====== 週視圖（週一～週日）======
    const weekDays = computed(()=>{
      const mon = mondayOfWeek(anchor.value);
      const sun = new Date(mon); sun.setDate(mon.getDate() - 1);
      const days=[];
      for(let i=0;i<7;i++){
            const d=new Date(mon); d.setDate(sun.getDate()+i);
        days.push({
          key: ymdKeyFromDate(d),
              label: ['週日','週一','週二','週三','週四','週五','週六'][i],
          date: `${pad2(d.getMonth()+1)}/${pad2(d.getDate())}`
        });
      }
      return days;
    });

    // ====== 右側班次摘要（原樣）======
    const monthShiftGroups = computed(()=>{
      const groups = {};
      for(let d=1; d<=daysInMonth.value; d++){
        const k = keyOf(d);
        (eventsMap[k]||[]).forEach(ev=>{
          const code = ev.title || '班次';
          (groups[code] ||= []).push(`${pad2(month.value)}/${pad2(d)}`);
        });
      }
      return groups;
    });

    function shiftLabel(code){
      const m = { AM:'早・午', PM:'午・晚', G1:'一般(1)', G2:'一般(2)', G3:'一般(3)' };
      return m[code?.toUpperCase?.()] || code || '班次';
    }

    // ====== 導航（上一頁／下一頁）======
    async function gotoPrev(){
      if (viewMode.value === 'week'){
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth(), anchor.value.getDate()-7);
        await fetchWeek();
      } else {
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth()-1, 1);
        await fetchMonth();
      }
    }
    async function gotoNext(){
      if (viewMode.value === 'week'){
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth(), anchor.value.getDate()+7);
        await fetchWeek();
      } else {
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth()+1, 1);
        await fetchMonth();
      }
    }

    // ====== 標題文字（月／週）======
    const monthText = computed(()=> `民國 ${rocYear.value} 年 ${month.value} 月`);
    const weekRangeText = computed(()=>{
      const mon = mondayOfWeek(anchor.value);
      const sun = new Date(mon); sun.setDate(mon.getDate()+6);
      const fmt = d => `${d.getMonth()+1}/${d.getDate()}`;
      return `${fmt(mon)} - ${fmt(sun)}`;
    });
    const headerText = computed(()=>{
      return viewMode.value === 'week' ? weekRangeText.value : monthText.value;
    });

    // 視圖切換時抓對應資料
    watch(viewMode, async (m)=>{
      if (m === 'week') await fetchWeek();
      else await fetchMonth();
    });

    // 初次載入：抓月資料
    fetchMonth();

    return {
      // 狀態
      rocYear, year, month, viewMode,

      // 標題
      headerText,

      // 計算/工具
      firstWeekday, daysInMonth, isToday, monthGrid, weekDays,
      monthShiftGroups, dayEvents, keyOf, shiftLabel,

      // 導航
      gotoPrev, gotoNext
    };
  }
}).mount('#app');
</script>