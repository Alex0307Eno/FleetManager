@{
    ViewData["Title"] = "行車歷程統計";
    Layout = "_Layout";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
<link href="~/css/Vehicle/Statistics.css" rel="stylesheet" />
<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div id="app" class="wrap" v-cloak>
    <div class="topbar">
        <h2 style="margin:0 0 12px 4px; color:#fff">車輛管理 ＞ 行車歷程統計</h2>
    </div>
    <!-- 分頁籤 -->
    <div class="tabs">
        <a class="tab" :class="{active: currentTab==='table'}" @@click="currentTab='table'">行車歷程</a>
        <a class="tab" :class="{active: currentTab==='chart'}" @@click="currentTab='chart'">統計圖</a>
    </div>

    <!-- 行車歷程表格 -->
    <div v-show="currentTab==='table'">
        <!-- 篩選列 -->
        <div class="filters">
            <div class="chip">
                <input type="date" v-model="q.dateFrom">
                <span>~</span>
                <input type="date" v-model="q.dateTo">
            </div>
            <div class="chip">
                <select v-model="q.driverId" @@change="reload">
                    <option :value="null">駕駛人（全部）</option>
                    <option v-for="d in drivers" :key="d.id" :value="d.id">{{ d.name }}</option>
                </select>
            </div>
            <div class="chip">
                <label>車輛車號</label>
                <select v-model="q.plate">
                    <option value="">全部</option>
                    <option v-for="p in plates" :key="p" :value="p">{{ p }}</option>
                </select>
            </div>
            <div class="chip">
                <label>申請人</label>
                <select v-model="q.applicant">
                    <option value="">全部</option>
                    <option v-for="a in applicants" :key="a" :value="a">{{ a }}</option>
                </select>
            </div>
            <div class="chip">
                <label>申請單位</label>
                <select v-model="q.dept">
                    <option value="">全部</option>
                    <option v-for="d in depts" :key="d" :value="d">{{ d }}</option>
                </select>
            </div>
            <button class="btn btn-primary" @@click="reload">搜尋</button>
            <button class="btn btn-success" style="margin-left:6px;font-weight:700" @@click="exportCsv">
                匯出
            </button>
        </div>

        <div class="card">
            <div class="card-bd table-wrap">
                <table>
                    <thead>
                        <tr>
                            <th>行車日期</th>
                            <th>駕駛人</th>
                            <th>車輛車號</th>
                            <th>申請單位</th>
                            <th>申請人</th>
                            <th>行駛里程</th>
                            <th>行駛趟次</th>
                            <th>長差/短差</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="r in rows" :key="r.id">
                            <td class="mono">{{ rocDate(r.driveDate) }}</td>
                            <td>{{ r.driverName }}</td>
                            <td><span class="badge">{{ r.plateNo }}</span></td>
                            <td>{{ shortDept(r.applicantDept) }}</td>
                            <td>{{ r.applicantName }}</td>
                            <td class="mono">{{ r.km }}</td>
                            <td class="mono">{{ r.trips }}</td>
                            <td>{{ r.longShort || '—' }}</td>
                        </tr>
                        <tr v-if="!rows.length">
                            <td colspan="8" style="text-align:center;color:#94a3b8;padding:16px">目前沒有資料</td>
                        </tr>
                    </tbody>
                    <tfoot v-if="rows.length">
                        <tr>
                            <td colspan="5" class="right">總計</td>
                            <td class="mono">{{ sumKm }}</td>
                            <td class="mono">{{ sumTrips }}</td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <!-- 統計圖 -->
    <div v-show="currentTab==='chart'">
        <!-- 統計圖專用篩選列 -->
        <div class="filters">
            <div class="chip">
                <input type="date" v-model="chartQ.dateFrom">
                <span>~</span>
                <input type="date" v-model="chartQ.dateTo">
            </div>
            <div class="chip">
                <label>長/短差</label>
                <select v-model="chartQ.longShort">
                    <option value="">全部</option>
                    <option value="長差">長差</option>
                    <option value="短差">短差</option>
                </select>
            </div>
            <button class="btn btn-primary" @@click="reloadChart">搜尋</button>
        </div>

        <div class="card" style="margin-top:14px; padding:20px">
            <div style="display:flex; gap:24px;">
                <div style="flex:1">
                    <h3 style="margin-bottom:12px">駕駛人行駛統計</h3>
                    <canvas id="driverChart" height="260"></canvas>
                </div>
                <div style="flex:1">
                    <h3 style="margin-bottom:12px">車輛行駛統計</h3>
                    <canvas id="vehicleChart" height="260"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const { createApp, ref, computed, onMounted } = Vue;

        createApp({
          setup(){
            const currentTab = ref('table');
            const today = new Date();
            const pad = n=>String(n).padStart(2,'0');

            // 行車歷程用
            const q = ref({ dateFrom:'', dateTo:'', driverId:null, plate:'', applicant:'', dept:'' });
            const rows = ref([]);
            const drivers = ref([]);
            const plates = ref([]);
            const applicants = ref([]);
            const depts = ref([]);

            // 統計圖用
            const chartQ = ref({ dateFrom:'', dateTo:'', longShort:'' });

            const rocDate = d=>{
              const x=new Date(d); if(isNaN(x)) return '';
              return `${x.getFullYear()-1911}/${pad(x.getMonth()+1)}/${pad(x.getDate())}`;
            };
            function shortDept(dept){
              if(!dept) return '';
              const parts=dept.split('/').map(x=>x.trim()).filter(Boolean);
              if(parts.length<=2) return dept;
              return `${parts[0]} / ${parts[parts.length-1]}`;
            }

            const sumKm = computed(()=> rows.value.reduce((a,b)=>a+(Number(b.km)||0),0));
            const sumTrips = computed(()=> rows.value.reduce((a,b)=>a+(Number(b.trips)||0),0));

            async function reload(){
              const res = await axios.get('/Vehicles/TripStats',{ params:q.value });
              rows.value = Array.isArray(res.data) ? res.data : [];
              // 填充下拉選單資料
              plates.value = [...new Set(rows.value.map(r=>r.plateNo).filter(Boolean))];
              applicants.value = [...new Set(rows.value.map(r=>r.applicantName).filter(Boolean))];
              depts.value = [...new Set(rows.value.map(r=>r.applicantDept).filter(Boolean))];
            }

            async function reloadChart(){
              const res = await axios.get('/Vehicles/TripStats',{ params:chartQ.value });
              rows.value = Array.isArray(res.data) ? res.data : [];
              drawCharts();
            }

            async function loadDrivers(){
              const res = await axios.get('/api/Drivers/Records');
              drivers.value = (res.data||[]).map(x=>({ id:x.driverId||x.id, name:x.driverName||x.name }));
            }

            let driverChart, vehicleChart;
            function drawCharts(){
              if(!rows.value.length) return;
              // 駕駛統計
              const drvAgg = {};
              rows.value.forEach(r=>{
                const k = r.driverName || '(未指派)';
                if(!drvAgg[k]) drvAgg[k] = { km:0, trips:0 };
                drvAgg[k].km += Number(r.km)||0;
                drvAgg[k].trips += Number(r.trips)||0;
              });
              const driverLabels = Object.keys(drvAgg);
              const driverKm = driverLabels.map(k=>drvAgg[k].km);
              const driverTrips = driverLabels.map(k=>drvAgg[k].trips);

              const driverCtx = document.getElementById('driverChart');
              if(driverChart) driverChart.destroy();
              driverChart = new Chart(driverCtx,{
                type:'bar',
                data:{ labels:driverLabels, datasets:[
                  {label:'里程 (km)', data:driverKm, yAxisID:'yKm', backgroundColor:'#3b82f6'},
                  {label:'趟次', data:driverTrips, yAxisID:'yTrips', backgroundColor:'#f59e0b'}
                ]},
                options:{ responsive:true, scales:{
                  yKm:{beginAtZero:true,title:{display:true,text:'公里'}},
                  yTrips:{beginAtZero:true,position:'right',grid:{drawOnChartArea:false},title:{display:true,text:'趟次'}}
                }}
              });

              // 車牌統計
              const vehAgg = {};
              rows.value.forEach(r=>{
                const k = r.plateNo || '(未指派)';
                if(!vehAgg[k]) vehAgg[k] = { km:0, trips:0 };
                vehAgg[k].km += Number(r.km)||0;
                vehAgg[k].trips += Number(r.trips)||0;
              });
              const plateLabels = Object.keys(vehAgg);
              const plateKm = plateLabels.map(k=>vehAgg[k].km);
              const plateTrips = plateLabels.map(k=>vehAgg[k].trips);

              const vehicleCtx = document.getElementById('vehicleChart');
              if(vehicleChart) vehicleChart.destroy();
              vehicleChart = new Chart(vehicleCtx,{
                type:'bar',
                data:{ labels:plateLabels, datasets:[
                  {label:'里程 (km)', data:plateKm, yAxisID:'yKm', backgroundColor:'#3b82f6'},
                  {label:'趟次', data:plateTrips, yAxisID:'yTrips', backgroundColor:'#f59e0b'}
                ]},
                options:{ responsive:true, scales:{
                  yKm:{beginAtZero:true,title:{display:true,text:'公里'}},
                  yTrips:{beginAtZero:true,position:'right',grid:{drawOnChartArea:false},title:{display:true,text:'趟次'}}
                }}
              });
            }

            // 匯出 CSV
            function exportCsv(){
              const headers = ['行車日期','駕駛人','車輛車號','申請單位','申請人','行駛里程','行駛趟次','長差/短差'];
              const lines = rows.value.map(r=>[
                rocDate(r.driveDate), r.driverName, r.plateNo, r.applicantDept, r.applicantName,
                r.km, r.trips, r.longShort
              ].map(s=>`"${String(s??'').replaceAll('"','""')}"`).join(','));
              const bom = '\uFEFF';
              const csv = [headers.join(','),...lines].join('\r\n');
              const blob = new Blob([bom+csv],{type:'text/csv;charset=utf-8;'});
              const url = URL.createObjectURL(blob);
              const a = document.createElement('a');
              a.href=url; a.download='行車歷程.csv'; a.click();
              URL.revokeObjectURL(url);
            }

            onMounted(async()=>{
              const start = new Date(today.getFullYear(), today.getMonth(), 1);
              const end = new Date(today.getFullYear(), today.getMonth()+1, 0);
              q.value.dateFrom = `${start.getFullYear()}-${pad(start.getMonth()+1)}-${pad(start.getDate())}`;
              q.value.dateTo = `${end.getFullYear()}-${pad(end.getMonth()+1)}-${pad(end.getDate())}`;
              chartQ.value.dateFrom = q.value.dateFrom;
              chartQ.value.dateTo = q.value.dateTo;
              await reload();
              await reloadChart();
              await loadDrivers();
            });

            return { currentTab,q,chartQ,rows,drivers,plates,applicants,depts,
              reload,reloadChart,rocDate,shortDept,sumKm,sumTrips,exportCsv };
          }
        }).mount('#app');
    </script>
}
