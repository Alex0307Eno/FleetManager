@{
    ViewData["Title"] = "我的班表";
}

<div id="app" class="wrap" v-cloak>
    <div class="topbar">
        <h1>我的值勤班表</h1>
        <div class="seg">
            <button class="seg-btn" :class="{active: viewMode==='month'}" @@click="viewMode='month'">每月</button>
            <button class="seg-btn" :class="{active: viewMode==='week'}" @@click="viewMode='week'">每週</button>
        </div>
    </div>

    <div class="grid">
        <!-- 左：主月曆 -->
        <section class="card">
            <div class="card-hd" style="gap:10px; align-items:center;">
                <button class="btn" @@click="gotoPrev">＜</button>
                <div>民國 {{ rocYear }} 年 {{ month }} 月</div>
                <button class="btn" @@click="gotoNext">＞</button>
                <div style="margin-left:auto" class="help">（只顯示您本人的班表）</div>
            </div>

            <!-- 月視圖 -->
            <div class="card-bd" v-if="viewMode==='month'">
                <div class="month-head">
                    <div v-for="w in ['週日','週一','週二','週三','週四','週五','週六']" :key="w">{{ w }}</div>
                </div>

                <div class="month-grid">
                    <div v-for="(cell,idx) in monthGrid" :key="idx" class="day">
                        <div class="day-hd" :class="{today: cell.isToday}">
                            <span>{{ cell.d || '' }}</span>
                        </div>

                        <template v-if="cell.d">
                            <div class="pill pill-dark" v-for="ev in dayEvents(cell.dateKey)" :key="ev.id">
                                {{ shiftLabel(ev.title) }}
                            </div>
                            <div v-if="!dayEvents(cell.dateKey).length" class="blank"></div>
                        </template>
                    </div>
                </div>
            </div>

            <!-- 週視圖：當前所選月內含今天的那一週 -->
            <div class="card-bd" v-else>
                <table class="table">
                    <thead>
                        <tr>
                            <th style="width:80px">日期</th>
                            <th v-for="(d,i) in weekDays" :key="i">
                                {{ d.label }}
                                <div class="help mono">{{ d.date }}</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th>班次</th>
                            <td v-for="(d,i) in weekDays" :key="'w'+i">
                                <div v-for="ev in dayEvents(d.key)" :key="ev.id" class="pill">
                                    {{ shiftLabel(ev.title) }}
                                </div>
                                <div v-if="!dayEvents(d.key).length" class="help">—</div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </section>

        <!-- 右：小月曆 + 班次摘要 -->
        <aside class="stack">
            <div class="card">
                <div class="card-hd">{{ rocYear }}年 {{ month }}月</div>
                <div class="card-bd">
                    <div class="mini-cal">
                        <div class="mini-head" v-for="w in ['日','一','二','三','四','五','六']" :key="w">{{ w }}</div>
                        <div v-for="n in firstWeekday" :key="'pad'+n"></div>
                        <div v-for="d in daysInMonth" :key="'d'+d"
                             class="mini-cell"
                             :class="{today:isToday(d), has: dayEvents(keyOf(d)).length}">
                            {{ d }}
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-hd">班次安排</div>
                <div class="card-bd">
                    <div class="help">本月各班別日期：</div>
                    <div v-for="(dates,code) in monthShiftGroups" :key="code" style="margin:6px 0;">
                        <b>{{ shiftLabel(code) }}</b>：
                        <span v-if="dates.length">{{ dates.join('、') }}</span>
                        <span v-else class="help">（無）</span>
                    </div>
                </div>
            </div>
        </aside>
    </div>
</div>

<!-- ===== 樣式（貼近你的截圖） ===== -->
<style>
    :root {
        --bg: #eef3f8;
        --card: #fff;
        --border: #e5e7eb;
        --text: #111827;
        --muted: #64748b;
        --primary: #1e6fb8;
    }

    [v-cloak] {
        display: none;
    }

    .wrap {
        max-width: 1280px;
        margin: 24px auto;
        padding: 0 16px
    }

    .topbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border: 1px solid var(--border);
        border-radius: 10px;
        padding: 12px 16px
    }

    .grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 16px
    }

    .card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 10px
    }

    .card-hd {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 16px;
        border-bottom: 1px solid var(--border);
        font-weight: 700
    }

    .card-bd {
        padding: 12px 16px
    }

    .stack {
        display: grid;
        gap: 16px
    }

    .btn {
        border: 1px solid var(--border);
        background: #fff;
        border-radius: 8px;
        padding: 6px 10px;
        cursor: pointer
    }

    .help {
        color: var(--muted);
        font-size: 12px
    }

    .seg {
        display: inline-flex;
        border: 1px solid #cbd5e1;
        border-radius: 8px;
        overflow: hidden
    }

    .seg-btn {
        background: #f1f5f9;
        border: 0;
        padding: 6px 12px;
        cursor: pointer
    }

        .seg-btn.active {
            background: #2563eb;
            color: #fff
        }

    .month-head {
        display: grid;
        grid-template-columns: repeat(7,1fr);
        gap: 4px;
        margin-bottom: 6px;
        color: #334155;
        text-align: center
    }

    .month-grid {
        display: grid;
        grid-template-columns: repeat(7,1fr);
        grid-auto-rows: 110px;
        gap: 6px
    }

    .day {
        border: 1px solid var(--border);
        border-radius: 8px;
        background: #fff;
        padding: 4px 8px;
        display: flex;
        flex-direction: column
    }

    .day-hd {
        display: flex;
        justify-content: flex-start
    }

        .day-hd.today {
            color: #2563eb;
            font-weight: 700
        }

    .pill {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        border: 1px solid var(--border);
        border-radius: 8px;
        padding: 4px 8px;
        background: #f1f5f9;
        margin: 2px 0;
        font-size: 13px;
        color: #111
    }

    .pill-dark {
        background: #e2e8f0;
        border-color: #d1d5db
    }

    .blank {
        height: 20px
    }

    .mini-cal {
        display: grid;
        grid-template-columns: repeat(7,1fr);
        gap: 4px
    }

    .mini-head {
        font-size: 12px;
        color: #475569;
        text-align: center
    }

    .mini-cell {
        border: 1px solid var(--border);
        border-radius: 6px;
        text-align: center;
        padding: 6px 0;
        background: #fff
    }

        .mini-cell.today {
            outline: 2px solid var(--primary)
        }

        .mini-cell.has {
            background: #f8fafc;
            border-color: #cbd5e1
        }

    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0
    }

        .table th, .table td {
            border-right: 1px solid var(--border);
            border-bottom: 1px solid var(--border);
            padding: 8px 10px;
            vertical-align: top
        }

            .table th:first-child, .table td:first-child {
                border-left: 1px solid var(--border)
            }

        .table thead th {
            background: #fafbff;
            text-align: center
        }

    .mono {
        font-variant-numeric: tabular-nums
    }
</style>

<!-- Vue 3 + axios（CDN） -->
<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
    const { createApp, ref, reactive, computed, watch } = Vue;

    createApp({
      setup(){
        const today = new Date();
        const anchor = ref(new Date(today));
        const year   = computed(()=> anchor.value.getFullYear());
        const month  = computed(()=> anchor.value.getMonth()+1);
        const viewMode = ref('month');

        // 解析後端回來的 events，轉成以 yyyy-MM-dd 為 key 的 map
        const eventsMap = reactive({}); // { '2025-06-03': [ {id,title,start,end,...} ] }

        function keyOf(d){
          const mm = String(month.value).padStart(2,'0');
          const dd = String(d).padStart(2,'0');
          return `${year.value}-${mm}-${dd}`;
        }
        function dateKey(date){
          const dt = new Date(date);
          const mm = String(dt.getMonth()+1).padStart(2,'0');
          const dd = String(dt.getDate()).padStart(2,'0');
          return `${dt.getFullYear()}-${mm}-${dd}`;
        }

        async function fetchMonth(){
        // 依 anchor 對應的年/月抓：start=該月1號, end=次月1號（半開）
          const start = new Date(anchor.value.getFullYear(), anchor.value.getMonth(), 1);
          const end   = new Date(anchor.value.getFullYear(), anchor.value.getMonth()+1, 1);
          const params = {
            start: start.toISOString(),
            end:   end.toISOString()
          };
          const res = await axios.get('/Drivers/MySchedule/Events', { params });

          // 轉成 map
          Object.keys(eventsMap).forEach(k => delete eventsMap[k]);
          (res.data || []).forEach(ev=>{
            const k = dateKey(ev.start);
            (eventsMap[k] ||= []).push(ev);
          });
        }
        //每周班表切換
  function startOfWeek(d){ const x=new Date(d); x.setHours(0,0,0,0); x.setDate(x.getDate()-x.getDay()); return x; }
        async function fetchWeek(){
      const s = startOfWeek(anchor.value);
      const e = new Date(s);
      e.setDate(s.getDate()+7); // 半開區間 [s, e)
      const params = { start: s.toISOString(), end: e.toISOString() };
      const res = await axios.get('/Drivers/MySchedule/Events', { params });

      // 跟 fetchMonth 一樣，先清空再塞
      Object.keys(eventsMap).forEach(k => delete eventsMap[k]);
      (res.data || []).forEach(ev=>{
        const k = dateKey(ev.start);
        (eventsMap[k] ||= []).push(ev);
      });
    }



        // ====== 月曆計算 ======
        const rocYear = computed(()=> year.value - 1911);
        const daysInMonth = computed(()=> new Date(year.value, month.value, 0).getDate());
        const firstOfMonth = computed(()=> new Date(year.value, month.value-1, 1));
         // 週日=0, 週一=1, ..., 週六=6
        const firstWeekday = computed(()=> firstOfMonth.value.getDay());
        const isToday = d => (year.value===today.getFullYear() && month.value===today.getMonth()+1 && d===today.getDate());

        const monthGrid = computed(()=>{
          const arr=[];
          const startDay = firstOfMonth.value.getDay(); // 0..6
          for(let i=0;i<startDay;i++) arr.push({d:'',isToday:false,dateKey:''});
          for(let d=1; d<=daysInMonth.value; d++){
            arr.push({
              d, isToday:isToday(d),
              dateKey: keyOf(d)
            });
          }
          while(arr.length<42) arr.push({d:'',isToday:false,dateKey:''});
          return arr;
        });

        function dayEvents(k){
          return eventsMap[k] || [];
        }

        // 週視圖（包含今天的那週，Mon–Sun）
        const weekDays = computed(()=>{
          // 找出本月含今天的那週（以 Mon 起始）
          const d0 = new Date(anchor.value);
          const dow = d0.getDay();
          d0.setDate(d0.getDate()-dow);
          const days=[];
          for(let i=0;i<7;i++){
            const d=new Date(d0); d.setDate(d0.getDate()+i);
            const mm = String(d.getMonth()+1).padStart(2,'0');
            const dd = String(d.getDate()).padStart(2,'0');
            days.push({
              key:`${d.getFullYear()}-${mm}-${dd}`,
              label:['週日','週一','週二','週三','週四','週五','週六'][i],
              date:`${mm}/${dd}`
            });
          }
          return days;
        });

        // 右側班次摘要：把本月所有事件依班別分組，列出日期（MM/DD）
        const monthShiftGroups = computed(()=>{
          const groups = {};
          for(let d=1; d<=daysInMonth.value; d++){
            const k = keyOf(d);
            (eventsMap[k]||[]).forEach(ev=>{
              const code = ev.title || '班次';
              (groups[code] ||= []).push(`${String(month.value).padStart(2,'0')}/${String(d).padStart(2,'0')}`);
            });
          }
          return groups;
        });

        function shiftLabel(code){
          const m = { AM:'早・午', PM:'午・晚', G1:'一般(1)', G2:'一般(2)', G3:'一般(3)' };
          return m[code?.toUpperCase?.()] || code || '班次';
        }

    

           async function gotoPrev(){
      if (viewMode.value === 'week'){
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth(), anchor.value.getDate()-7);
        await fetchWeek();
      } else {
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth()-1, 1);
        await fetchMonth();
      }
    }
    async function gotoNext(){
      if (viewMode.value === 'week'){
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth(), anchor.value.getDate()+7);
        await fetchWeek();
      } else {
        anchor.value = new Date(anchor.value.getFullYear(), anchor.value.getMonth()+1, 1);
        await fetchMonth();
      }
    }
       watch(viewMode, async (m)=>{
        if (m === 'week') {
          await fetchWeek();
        } else {
          await fetchMonth();
        }
      });
        // 初次載入
        fetchMonth();

        return {
          rocYear, year, month, viewMode,
          firstWeekday, daysInMonth, isToday,
          monthGrid, weekDays, monthShiftGroups,
          dayEvents, keyOf, shiftLabel,
          gotoPrev, gotoNext
        };
      }
    }).mount('#app');
</script>
