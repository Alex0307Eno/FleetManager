@{
    
    ViewData["Title"] = "執勤排班";
}
<div id="app" class="wrap" v-cloak>
    <div class="topbar">
        <h1>駕駛員管理 ＞ 輪值排班</h1>

    </div>

    <div class="grid">
        <!-- 左：主月曆 -->
        <section class="card">
            <div class="card-hd" style="gap:10px; align-items:center;">
                <button class="btn" @@click="prev">＜</button>
                <div>民國 {{ rocYear }} 年 {{ month }} 月</div>
                <button class="btn" @@click="next">＞</button>

                <!-- 每月 / 每週 分段切換（貼著標題右邊） -->
                <div class="seg" style="margin-left:12px;">
                    <button class="seg-btn" :class="{active: viewMode==='month'}" @@click="viewMode='month'">每月</button>
                    <button class="seg-btn" :class="{active: viewMode==='week'}" @@click="viewMode='week'">每週</button>
                </div>
                <div class="toolbar" style="margin-left:auto; display:flex; gap:6px;">
                    <button class="btn btn-warning">代理人</button>
                    <button class="btn btn-primary" @@click="exportCSV">匯出班表</button>
                </div>
            </div>

            <div class="card-bd" v-if="viewMode==='month'">
                <!-- 月曆：星期標題 -->
                <div class="month-head">
                    <div v-for="w in ['週日','週一','週二','週三','週四','週五','週六']" :key="w">{{ w }}</div>
                </div>
                <!-- 6 週 x 7 天 -->
                <div class="month-grid">
                    <div v-for="(cell,idx) in monthGrid" :key="idx" class="day">
                        <div class="day-hd" :class="{today: cell.isToday}">
                            <span>{{ cell.d || '' }}</span>
                        </div>

                        <!-- 平日才顯示排班 pill（週一=1 ... 週五=5）-->
                        <template v-if="cell.isWeekday">
                            <div class="pill pill-dark">{{ codes.am[cell.weekIdx] }}：{{ who(codes.am[cell.weekIdx]) }}</div>
                            <div class="pill">{{ codes.pm[cell.weekIdx] }}：{{ who(codes.pm[cell.weekIdx]) }}</div>
                            <div class="help">● 長差第一順位：{{ codes.g3[cell.weekIdx] }}：{{ who(codes.g3[cell.weekIdx]) }}</div>
                        </template>
                    </div>
                </div>
            </div>

            <!-- 週檢視：只排 Mon–Fri -->
            <div class="card-bd" v-else>
                <table class="table">
                    <thead>
                        <tr>
                            <th style="width:80px">時段</th>
                            <th v-for="(d,i) in weekDays" :key="i">
                                {{ d.label }}<div class="help mono">{{ d.date }}</div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- 早午 -->
                        <tr>
                            <th>早・午</th>
                            <td v-for="(d,i) in weekDays" :key="'am'+i">
                                <div class="pill pill-dark">
                                    {{ codes.am[i] }}、{{ who(codes.am[i]) }}(早・午)
                                </div>
                            </td>
                        </tr>
                        <!-- 午晚 -->
                        <tr>
                            <th>午・晚</th>
                            <td v-for="(d,i) in weekDays" :key="'pm'+i">
                                <div class="pill">
                                    {{ codes.pm[i] }}、{{ who(codes.pm[i]) }}(午・晚)
                                </div>
                            </td>
                        </tr>

                        <!-- 一般(1) -->
                        <tr>
                            <th>一般(1)</th>
                            <td v-for="(d,i) in weekDays" :key="'g1'+i">
                                <div class="pill">
                                    值勤：{{ codes.g1[i] }}（{{ who(codes.g1[i]) }}）
                                </div>
                                <div class="help">
                                    ● 長差第一順位：{{ codes.g3[i] }}：{{ who(codes.g3[i]) }}
                                </div>
                            </td>
                        </tr>

                        <!-- 一般(2) -->
                        <tr>
                            <th>一般(2)</th>
                            <td v-for="(d,i) in weekDays" :key="'g2'+i">
                                <div class="pill">
                                    值勤：{{ codes.g2[i] }}（{{ who(codes.g2[i]) }}）
                                </div>
                                <div class="help">
                                    ● 長差第一順位：{{ codes.g3[i] }}：{{ who(codes.g3[i]) }}
                                </div>
                            </td>
                        </tr>

                        <!-- 一般(3) -->
                        <tr>
                            <th>一般(3)</th>
                            <td v-for="(d,i) in weekDays" :key="'g3'+i">
                                <div class="pill">
                                    值勤：{{ codes.g3[i] }}（{{ who(codes.g3[i]) }}）
                                </div>
                                <div class="help">
                                    ● 長差第一順位：{{ codes.g3[i] }}：{{ who(codes.g3[i]) }}
                                </div>
                            </td>
                        </tr>
                    </tbody>

                </table>
            </div>
        </section>

        <!-- 右：小月曆 + 班次安排 -->
        <aside class="stack">
            <div class="card">
                <div class="card-hd">114年 {{ month }} 月</div>
                <div class="card-bd">
                    <div class="mini-cal">
                        <div class="mini-head" v-for="w in ['日','一','二','三','四','五','六']" :key="w">{{ w }}</div>
                        <div v-for="n in firstWeekday-1" :key="'pad'+n"></div>
                        <div v-for="d in daysInMonth" :key="'d'+d" class="mini-cell" :class="{today: isToday(d)}">{{ d }}</div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-hd">班次安排</div>
                <div class="card-bd">
                    <select v-model="selectedWeek" class="week-select">
                        <option v-for="(w,idx) in weeksOfMonth" :key="idx" :value="idx">
                            {{ month }} 月 第 {{ idx+1 }} 週
                        </option>
                    </select>

                    <div class="list" style="margin-top:10px">
                        <div class="row" v-for="k in ['A','B','C','D','E']" :key="k">
                            <label style="flex:0 0 28px;font-weight:700">{{ k }}：</label>
                            <select v-model="assign[k]">
                                <option :value="null">（未指定）</option>
                                <option v-for="p in drivers" :key="p" :value="p">{{ p }}</option>
                            </select>
                        </div>
                    </div>

                    <div style="text-align:right; margin-top:10px;">
                        <button class="btn btn-primary">確定</button>
                    </div>
                </div>
            </div>
        </aside>
    </div>
</div>

<!-- ====== 样式 ====== -->
<style>
    :root {
        --bg: #eef3f8;
        --card: #fff;
        --border: #e5e7eb;
        --text: #111827;
        --muted: #64748b;
        --primary: #1e6fb8;
        --primary-600: #2b83d4;
    }

    .wrap {
        max-width: 1280px;
        margin: 24px auto;
        padding: 0 16px
    }

    .topbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border: 1px solid var(--border);
        border-radius: 10px;
        padding: 12px 16px
    }

    .toolbar {
        display: flex;
        gap: 8px
    }

    .btn {
        border: 1px solid var(--border);
        background: #fff;
        border-radius: 8px;
        padding: 6px 10px;
        cursor: pointer
    }

    .btn-primary {
        background: var(--primary);
        border-color: var(--primary);
        color: #fff
    }

    .btn-warning {
        background: #facc15;
        border-color: #eab308;
        color: #111
    }

    .grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 16px
    }

    .card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 10px
    }

    .card-hd {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 12px 16px;
        border-bottom: 1px solid var(--border);
        font-weight: 700
    }

    .card-bd {
        padding: 12px 16px
    }

    .stack {
        display: grid;
        gap: 16px
    }

    .help {
        color: var(--muted);
        font-size: 12px
    }

    .pill {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        border: 1px solid var(--border);
        border-radius: 8px;
        padding: 4px 8px;
        background: #f1f5f9;
        margin: 2px 0;
        font-size: 13px;
        color: #111
    }

    .pill-dark {
        background: #e2e8f0;
        border-color: #d1d5db
    }

    /* 分段切換 */
    .seg {
        display: inline-flex;
        border: 1px solid #cbd5e1;
        border-radius: 8px;
        overflow: hidden
    }

    .seg-btn {
        background: #f1f5f9;
        border: 0;
        padding: 6px 12px;
        cursor: pointer
    }

        .seg-btn.active {
            background: #2563eb;
            color: #fff
        }

    /* 月曆主格 */
    .month-head {
        display: grid;
        grid-template-columns: repeat(7,1fr);
        gap: 4px;
        margin-bottom: 6px;
        color: #334155;
        text-align: center
    }

    .month-grid {
        display: grid;
        grid-template-columns: repeat(7,1fr);
        grid-auto-rows: 120px;
        gap: 6px
    }

    .day {
        border: 1px solid var(--border);
        border-radius: 8px;
        background: #fff;
        padding: -1px 8px;
        display: flex;
        flex-direction: column
    }

    .day-hd {
        display: flex;
        justify-content: flex-start
    }

        .day-hd.today {
            color: #2563eb;
            font-weight: 700
        }

    /* 小月曆 */
    .mini-cal {
        display: grid;
        grid-template-columns: repeat(7,1fr);
        gap: 4px
    }

    .mini-head {
        font-size: 12px;
        color: #475569;
        text-align: center
    }

    .mini-cell {
        border: 1px solid var(--border);
        border-radius: 6px;
        text-align: center;
        padding: 6px 0;
        background: #fff
    }

        .mini-cell.today {
            outline: 2px solid var(--primary)
        }

    /* 表格（週檢視） */
    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0
    }

        .table th, .table td {
            border-right: 1px solid var(--border);
            border-bottom: 1px solid var(--border);
            padding: 8px 10px;
            vertical-align: top
        }

            .table th:first-child, .table td:first-child {
                border-left: 1px solid var(--border)
            }

        .table thead th {
            background: #fafbff;
            text-align: center
        }

    .mono {
        font-variant-numeric: tabular-nums
    }

    .row {
        display: flex;
        align-items: center;
        gap: 8px
    }

    select {
        width: 100%;
        padding: 6px 10px;
        border: 1px solid #cbd5e1;
        border-radius: 8px;
        background: #fff
    }

    .week-select {
        width: 100%
    }
</style>

<!-- ====== Vue 3 ====== -->
<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script>
    const { createApp, ref, reactive, computed } = Vue;

    createApp({
      setup(){
        const today     = new Date();
        const rocYear   = today.getFullYear() - 1911;
        const month     = ref(today.getMonth()+1);             // 1-12
        const yearAD    = computed(()=> rocYear + 1911);

        // A~E 駕駛
        const drivers = ref(['邱ＯＯ','黃ＯＯ','王ＯＯ','吳ＯＯ','林ＯＯ']);
        const assign  = reactive({A:'邱ＯＯ',B:'黃ＯＯ',C:'王ＯＯ',D:'吳ＯＯ',E:'林ＯＯ'});

        // 輪值矩陣（週一~週五）
        const codes = reactive({
          am:['A','C','E','B','D'],   // 早・午
          pm:['B','D','A','C','E'],   // 午・晚（這裡用來當第二條）
          g1:['C','E','B','D','A'],
          g2:['D','A','C','E','B'],
          g3:['E','B','D','A','C'],   // 長差第一順位
        });

        // 右側小月曆
        const daysInMonth = computed(()=> new Date(yearAD.value, month.value, 0).getDate());
        const firstOfMonth = computed(()=> new Date(yearAD.value, month.value-1, 1));
        const firstWeekday = computed(()=> firstOfMonth.value.getDay()===0?7:firstOfMonth.value.getDay());
        const isToday = d => (yearAD.value===today.getFullYear() && month.value===today.getMonth()+1 && d===today.getDate());

        // 月曆主格（42 格）
             const monthGrid = computed(()=>{
      const arr = [];
      const dim = daysInMonth.value; // 這個月有幾天
      const startDay = firstOfMonth.value.getDay(); // 0=Sun..6=Sat

      // 1️⃣ 前面補空白
      for (let i = 0; i < startDay; i++) {
        arr.push({ d: '', isToday:false, isWeekday:false, weekIdx:0 });
      }

      // 2️⃣ 當月日期
      for (let d = 1; d <= dim; d++) {
        const jsDate = new Date(yearAD.value, month.value-1, d);
        const dow = jsDate.getDay(); // 0=Sun..6=Sat
        arr.push({
          d,
          isToday: isToday(d),
          isWeekday: dow >= 1 && dow <= 5,
          weekIdx: dow-1  // 0=Mon,1=Tue… → 對應到你的 codes 索引
        });
      }

      // 3️⃣ 後面補空白，總格數固定 42
      while (arr.length < 42) {
        arr.push({ d: '', isToday:false, isWeekday:false, weekIdx:0 });
      }

      return arr;
    });



        // 週檢視（目前即當月第 selectedWeek 週）
           const weeksOfMonth = computed(()=>{
      const res = [];
      const year = yearAD.value;
      const m = month.value - 1; // JS 月份 0-based

      // 先找到這個月第一天
      let d = new Date(year, m, 1);

      // 調整到當週的週一
      const dow = (d.getDay() + 6) % 7; // 0=Mon
      d.setDate(d.getDate() - dow);

      // 逐週推算，直到超過當月天數
      while (true) {
        const start = new Date(d); // 週一
        const end   = new Date(d); end.setDate(d.getDate() + 4); // 週五

        // 只收錄有碰到這個月的週
        if (start.getMonth() === m || end.getMonth() === m) {
          res.push([start, end]);
        }

        d.setDate(d.getDate() + 7); // 下週一
        if (d.getMonth() > m && d.getDate() >= 7) break; // 超出本月就停
      }

      return res;
    });

        const selectedWeek = ref(0);
        // 進場定位到包含今天的那一週
        const initWeekIdx = (()=> {
          const w = weeksOfMonth.value;
          for(let i=0;i<w.length;i++){
            if(today.getMonth()+1===month.value && today.getDate()>=w[i][0] && today.getDate()<=w[i][1]) { selectedWeek.value=i; break; }
          }
        })();

           const weekDays = computed(()=>{
      const w = weeksOfMonth.value[selectedWeek.value];
      if (!w) return [];
      const days=[];
      let d = new Date(w[0]); // 從週一開始

      for (let i=0;i<5;i++){
        days.push({
          label:['週一','週二','週三','週四','週五'][i],
          date:`${d.getMonth()+1}/${d.getDate()}`
        });
        d.setDate(d.getDate()+1);
      }
      return days;
    });


        function who(code){ return assign[code] || '—'; }

        // 月/週切換 + 上下月/週
        const viewMode = ref('month');
            function prev(){
      if(viewMode.value==='month'){
        month.value = month.value>1 ? month.value-1 : 12;
      }else{
        if(selectedWeek.value > 0) {
          selectedWeek.value--;
        } else {
          // 切換到上個月
          month.value = month.value>1 ? month.value-1 : 12;
          // ⚠️ 等待 weeksOfMonth 更新後再選最後一週
          Vue.nextTick(()=>{
            selectedWeek.value = weeksOfMonth.value.length - 1;
          });
        }
      }
        }function next(){
      if(viewMode.value==='month'){
        month.value = month.value<12 ? month.value+1 : 1;
      }else{
        if(selectedWeek.value < weeksOfMonth.value.length-1) {
          selectedWeek.value++;
        } else {
          // 切換到下個月
          month.value = month.value<12 ? month.value+1 : 1;
          Vue.nextTick(()=>{
            selectedWeek.value = 0;
          });
        }
      }
    }

        // 匯出 CSV（取當前週）
        function exportCSV(){
          const head='日期,時段,代號,駕駛\n';
          let rows='';
          weekDays.value.forEach((d,i)=>{
            rows += `${d.date},早午,${codes.am[i]},${who(codes.am[i])}\n`;
            rows += `${d.date},午晚,${codes.pm[i]},${who(codes.pm[i])}\n`;
            rows += `${d.date},一般(1),${codes.g1[i]},${who(codes.g1[i])}\n`;
            rows += `${d.date},一般(2),${codes.g2[i]},${who(codes.g2[i])}\n`;
            rows += `${d.date},一般(3),${codes.g3[i]},${who(codes.g3[i])}\n`;
          });
          const blob=new Blob([head+rows],{type:'text/csv;charset=utf-8;'});
          const url=URL.createObjectURL(blob);
          const a=document.createElement('a'); a.href=url; a.download=`班表_${rocYear}-${month.value}-w${selectedWeek.value+1}.csv`;
          document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);
        }

        return {
          rocYear, month, viewMode,
          drivers, assign, codes,
          daysInMonth, firstWeekday, isToday,
          monthGrid, weeksOfMonth, selectedWeek, weekDays,
          who, prev, next, exportCSV
        };
      }
    }).mount('#app');
</script>
