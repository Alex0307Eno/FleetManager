@{
    ViewData["Title"] = "車輛維護";
}
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;600;700&display=swap">
<style>
    :root {
        --bg: #f6f7fb;
        --card: #fff;
        --border: #e5e7eb;
        --text: #1f2937;
        --muted: #6b7280;
        --primary: #1e6fb8;
        --primary-600: #2b83d4;
        --shadow: 0 1px 3px rgba(16,24,40,.08);
    }

    body {
        background: var(--bg);
        font-family: "Noto Sans TC","PingFang TC","Microsoft JhengHei",system-ui,Arial,sans-serif;
    }

    .wrap {
        max-width: 1280px;
        margin: 24px auto;
        padding: 0 16px
    }

    .grid {
        display: grid;
        grid-template-columns: 320px 1fr;
        gap: 16px
    }

    .card {
        background: #fff;
        border: 1px solid var(--border);
        border-radius: 10px;
        box-shadow: var(--shadow)
    }

    .card-hd {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 12px 16px;
        border-bottom: 1px solid var(--border)
    }

    .card-bd {
        padding: 12px 16px
    }

    .title {
        font-weight: 700
    }

    .btn {
        border: 1px solid var(--border);
        background: #fff;
        border-radius: 8px;
        padding: 6px 10px;
        cursor: pointer
    }

    .btn-primary {
        background: var(--primary);
        color: #fff;
        border-color: var(--primary)
    }

    .btn-ghost {
        background: #fff
    }

    .left .field {
        display: flex;
        align-items: center;
        gap: 8px;
        margin: 8px 0
    }

        .left .field label {
            width: 110px;
            color: #334155
        }

    .left .fake {
        flex: 1;
        background: #f3f4f6;
        border: 1px solid var(--border);
        border-radius: 8px;
        padding: 6px 10px;
        color: #64748b
    }

    .tabs {
        display: flex;
        gap: 6px;
        border-bottom: 1px solid var(--border);
        padding: 0 16px
    }

    .tab {
        padding: 10px 12px;
        cursor: pointer
    }

        .tab.active {
            border-bottom: 2px solid var(--primary);
            color: var(--primary);
            font-weight: 700
        }

    .toolbar {
        display: flex;
        gap: 8px;
        align-items: center
    }

        .toolbar .select {
            min-width: 140px
        }

    .table-wrap {
        overflow: auto
    }

    table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0
    }

    thead th {
        position: sticky;
        top: 0;
        background: #f9fafb;
        border-top: 1px solid var(--border);
        border-bottom: 1px solid var(--border);
        text-align: left;
        padding: 10px
    }

    tbody td {
        background: #fff;
        border-bottom: 1px solid var(--border);
        padding: 10px;
        vertical-align: top
    }

        thead th:first-child, tbody td:first-child {
            border-left: 1px solid var(--border)
        }

        thead th:last-child, tbody td:last-child {
            border-right: 1px solid var(--border)
        }

    tbody tr:first-child td {
        border-top: 1px solid var(--border)
    }

    .mono {
        font-variant-numeric: tabular-nums
    }

    .row-actions {
        display: flex;
        gap: 6px
    }

    .icon-btn {
        border: 1px solid var(--border);
        background: #fff;
        border-radius: 8px;
        width: 32px;
        height: 32px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        cursor: pointer
    }

    .form-row {
        display: grid;
        grid-template-columns: repeat(8,1fr);
        gap: 8px;
        margin: 8px 0
    }

        .form-row input, .form-row select {
            width: 100%;
            padding: 6px 8px;
            border: 1px solid #cbd5e1;
            border-radius: 6px;
            background: #fff
        }

    .topbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border: 1px solid var(--border);
        border-radius: 10px;
        padding: 12px 16px
    }

    table th, table td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .vehicle-info {
        display: flex;
        align-items: center;
        gap: 12px;
        font-size: 16px;
        font-weight: 600;
        color: #fff;
    }

        .vehicle-info .plate {
            background: rgba(255,255,255,0.15);
            padding: 6px 12px;
            border-radius: 8px;
        }

        .vehicle-info .status {
            padding: 6px 12px;
            border-radius: 8px;
            font-weight: 700;
        }

            /* 狀態顏色 */
            .vehicle-info .status.可用 {
                background: #22c55e;
                color: #fff;
            }

            .vehicle-info .status.維修中 {
                background: #eab308;
                color: #111;
            }

            .vehicle-info .status.報廢 {
                background: #ef4444;
                color: #fff;
            }

    .vehicle-info {
        display: flex;
        align-items: center;
        gap: 12px;
        color: #fff;
    }

    .plate {
        background: rgba(255,255,255,0.15);
        padding: 6px 12px;
        border-radius: 8px;
    }

    .status {
        padding: 6px 12px;
        border-radius: 8px;
        font-weight: 700;
        background: rgba(255,255,255,0.2);
    }

        .status.可用 {
            background: #16a34a;
            color: #fff;
        }

        .status.維修中 {
            background: #f59e0b;
            color: #fff;
        }

        .status.報廢 {
            background: #dc2626;
            color: #fff;
        }

    .btn-success {
        background: #16a34a;
        border: none;
        padding: 6px 12px;
        border-radius: 8px;
        color: #fff;
        cursor: pointer;
    }

</style>

<div id="app" class="wrap" v-cloak>
    <div class="topbar">
        <h2 style="margin:0 0 12px 4px; color:#fff">車輛管理 ＞ 車輛維護</h2>

        <!-- 右側顯示車牌與狀態 -->
        <div class="vehicle-info">
            <span class="plate">{{ vehicleDetail.plate || '未選擇車輛' }}</span>
            <span class="status" :class="vehicleDetail.status">
                {{ vehicleDetail.status || '—' }}
            </span>
            <button v-if="vehicleDetail.status==='維修中'" class="btn btn-success" @@click="setAvailable">
            維修完成
            </button>
        </div>
    </div>

    <div class="grid">

        <!-- 左側：車籍卡 -->
        <section class="card left">
            <div class="card-hd">
                <div class="title">汽車車歷登記卡</div>
                <div class="toolbar">
                    <select v-model="selectedVehicleId" class="select"
                            @@change="() => { loadMaintenance(); loadVehicleDetail(); loadRepairs(); }">
                        <option v-for="v in vehicles" :key="v.vehicleId" :value="v.vehicleId">
                            {{ v.plate }} ({{ v.status }})
                        </option>
                    </select>


                </div>
            </div>
            <div class="card-bd">
                <div class="field"><label>來源</label><div class="fake">{{ vehicleDetail.source || '—' }}</div></div>
                <div class="field"><label>核准文號</label><div class="fake">{{ vehicleDetail.approvalNo || '—' }}</div></div>
                <div class="field"><label>購置日期</label><div class="fake">{{ vehicleDetail.purchaseDate?.slice(0,10) || '—' }}</div></div>
                <div class="field"><label>價值</label><div class="fake">{{ vehicleDetail.value || '—' }}</div></div>
                <div class="field"><label>請領牌照日期</label><div class="fake">{{ vehicleDetail.licenseDate?.slice(0,10) || '—' }}</div></div>
                <div class="field"><label>開始使用日期</label><div class="fake">{{ vehicleDetail.startUseDate?.slice(0,10) || '—' }}</div></div>
                <div class="field"><label>定期檢驗日期</label><div class="fake">{{ vehicleDetail.inspectionDate?.slice(0,10) || '—' }}</div></div>
                <div class="field"><label>排氣量</label><div class="fake">{{ vehicleDetail.engineCC || '—' }}</div></div>
                <div class="field"><label>引擎號碼</label><div class="fake">{{ vehicleDetail.engineNo || '—' }}</div></div>
                <div class="field"><label>廠牌</label><div class="fake">{{ vehicleDetail.brand || '—' }}</div></div>
                <div class="field"><label>年份</label><div class="fake">{{ vehicleDetail.year || '—' }}</div></div>
                <div class="field"><label>型式</label><div class="fake">{{ vehicleDetail.type || '—' }}</div></div>
                <div class="field"><label>(移轉)報停報廢</label><div class="fake">{{ vehicleDetail.retired ? '已報廢' : '—' }}</div></div>

            </div>
        </section>

        <!-- 右側：保養紀錄 / 報修申請 -->
        <section class="card">
            <div class="tabs">
                <div class="tab" :class="{active: tab==='maint'}" @@click="tab='maint'">保養修配</div>
                <div class="tab" :class="{active: tab==='repair'}" @@click="tab='repair'">維修紀錄</div>
                <div class="tab" :class="{active: tab==='inspection'}" @@click="tab='inspection'">驗車紀錄</div>
                <div class="tab" :class="{active: tab==='Violation'}" @@click="tab='Violation'">違規紀錄</div>
                <div class="tab" :class="{active: tab==='record'}" @@click="tab='record'">紀錄總覽</div>
            </div>

            <!-- 保養紀錄 -->
            <div v-if="tab==='maint'">
                <div class="card-hd">
                    <div class="title">保養修配零件紀錄</div>
                    <div class="toolbar">
                        <button class="btn btn-primary" @@click="showAdd = !showAdd">{{ showAdd ? '取消' : '新增' }}</button>
                    </div>
                </div>

                <!-- 新增表單 -->
                <div class="card-bd" v-if="showAdd">
                    <div class="form-row">
                        <input type="date" v-model="form.date" />
                        <input type="number" v-model.number="form.odometer" placeholder="里程" />
                        <input type="text" v-model="form.item" placeholder="保養項目" />
                        <input type="text" v-model="form.unit" placeholder="單位" />
                        <input type="number" v-model.number="form.qty" step="0.01" placeholder="數量" />
                        <input type="number" v-model.number="form.amount" step="0.01" placeholder="單價" />
                        <input type="text" v-model="form.vendor" placeholder="承修廠商" />
                        <input type="text" v-model="form.note" placeholder="備註" />
                    </div>
                    <div style="text-align:right">
                        <button class="btn" @@click="showAdd=false">取消</button>
                        <button class="btn btn-primary" style="margin-left:8px" @@click="create()">儲存</button>
                    </div>
                </div>

                <div class="card-bd table-wrap">
                    <table>
                        <thead>
                            <tr>
                                <th style="width:110px">日期</th>
                                <th style="width:80px">里程</th>
                                <th style="width:220px">保養項目</th>
                                <th style="width:60px">單位</th>
                                <th style="width:70px">數量</th>
                                <th style="width:90px">單價</th>
                                <th style="width:100px">金額</th>
                                <th style="width:160px">承修廠商</th>
                                <th style="width:120px">備註</th>
                                <th style="width:80px">動作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="r in rows" :key="r.id">
                                <td class="mono">{{ r?.date || '—' }}</td>
                                <td class="mono">{{ r.odometer ?? '' }}</td>
                                <td>{{ r.item }}</td>
                                <td>{{ r.unit || '' }}</td>
                                <td class="mono">{{ fmtNum(r.qty) }}</td>
                                <td class="mono">{{ fmtMoney(r.amount) }}</td>
                                <td class="mono">{{ fmtMoney(r.subtotal) }}</td>
                                <td>{{ r.vendor || '' }}</td>
                                <td>{{ r.note || '' }}</td>
                                <td class="row-actions">
                                    <button class="icon-btn" title="刪除" @@click="remove(r)">
                                        🗑️
                                    </button>
                                </td>
                            </tr>
                            <tr v-if="!rows.length">
                                <td colspan="10" style="text-align:center; color:#64748b">尚無資料</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- 維修紀錄區塊 -->
            <div v-if="tab==='repair'">
                <!-- 報修申請表單 -->
                <div class="card-hd">
                    <div class="title">報修申請</div>
                    <div class="toolbar">
                        <button class="btn btn-primary" @@click="showRepairAdd = !showRepairAdd">
                            {{ showRepairAdd ? '取消' : '新增' }}
                        </button>
                    </div>
                </div>
                <div class="card-bd" v-if="showRepairAdd">
                    <div class="form-row" style="grid-template-columns:1fr 1fr 2fr 1fr 2fr;">
                        <input type="date" v-model="repair.date" />
                        <input type="text" v-model="repair.place" placeholder="送修地點" />
                        <input type="text" v-model="repair.desc" placeholder="故障描述" />
                        <input type="number" v-model.number="repair.cost" step="0.01" placeholder="估計費用" />
                        <input type="text" v-model="repair.contact" placeholder="聯絡人/電話" />
                    </div>
                    <div style="text-align:right">
                        <button class="btn" @@click="showRepairAdd=false">取消</button>
                        <button class="btn btn-primary" style="margin-left:8px" @@click="submitRepair">送出申請</button>
                    </div>
                </div>
                

                <!-- 維修紀錄表格 -->
                <div class="card-bd table-wrap" style="margin-top:16px">

                    <table>
                        <thead>
                            <tr>
                                <th style="width:120px">日期</th>
                                <th style="width:200px">故障描述</th>
                                <th style="width:100px">狀態</th>
                                <th style="width:100px">估計費用</th>
                                <th style="width:160px">備註</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="r in repairRows" :key="r.id">
                                <td class="mono">{{ r.date || '—' }}</td>
                                <td>{{ r.issue }}</td>
                                <td>{{ r.status }}</td>
                                <td class="mono">{{ fmtMoney(r.costEstimate) }}</td>
                                <td>{{ r.note }}</td>
                            </tr>
                            <tr v-if="!repairRows.length">
                                <td colspan="5" style="text-align:center;color:#64748b">尚無維修資料</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

           

        </section>

    </div>
</div>

<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    const { createApp, ref, onMounted, computed } = Vue;

    createApp({
      setup(){
        const vehicles = ref([]);
        const selectedVehicleId = ref(0);
        const showRepairAdd = ref(false);

        const tab = ref('maint');
        const rows = ref([]);
        const showAdd = ref(false);

        const today = new Date();
        const toISO = d => d.toISOString().slice(0,10);

        const form = ref({
          date: toISO(today),
          odometer: null,
          item: '',
          unit: '',
          qty: null,
          amount: null,
          vendor: '',
          note: ''
        });

        const repair = ref({
          date: toISO(today),
          place: '',
          desc: '',
          cost: null,
          contact: '',
          vendor: '',
          note: '',
          odometer: null
        });
        const fmtNum = v => (v==null || v==='') ? '' : Number(v).toString();
        const fmtMoney = v => (v==null || v==='') ? '' : Number(v).toLocaleString('zh-TW', {minimumFractionDigits:0});

        async function loadVehicles(){
          const res = await axios.get('/api/maintenance/vehicles');
          vehicles.value = res.data;
          if (vehicles.value.length && !selectedVehicleId.value){
            selectedVehicleId.value = vehicles.value[0].vehicleId;
          }
        }

        async function setAvailable() {
          if (!selectedVehicleId.value) return;
          try {
            await axios.put(`/api/maintenance/vehicle/${selectedVehicleId.value}/status`,
              JSON.stringify("可用"),
              { headers: { 'Content-Type': 'application/json' } }
            );
            vehicleDetail.value.status = "可用"; // 前端同步更新
            alert("✅ 維修完成，車輛已可用");
          } catch (err) {
            console.error("狀態更新失敗", err);
            alert("更新失敗");
          }
        }

        const vehicleDetail = ref({});

        async function loadVehicleDetail() {
          if (!selectedVehicleId.value) {
            vehicleDetail.value = {};
            return;
          }
          const res = await axios.get(`/api/maintenance/vehicle/${selectedVehicleId.value}`);
          vehicleDetail.value = res.data || {};
        }

        async function loadMaintenance(){
          if(!selectedVehicleId.value) return;
          const res = await axios.get('/api/maintenance', { params:{ vehicleId: selectedVehicleId.value }});
          rows.value = res.data;
        }

        async function create(){
          if(!selectedVehicleId.value){ alert('請先選擇車輛'); return; }
          if(!form.value.item.trim()){ alert('請輸入保養項目'); return; }
          const plate = (vehicles.value.find(v=>v.vehicleId===selectedVehicleId.value)||{}).plate || null;
          const payload = {
            vehicleId: selectedVehicleId.value,
            vehiclePlate: plate,
            date: form.value.date,
            odometer: form.value.odometer,
            item: form.value.item,
            unit: form.value.unit,
            qty: form.value.qty,
            amount: form.value.amount,
            vendor: form.value.vendor,
            note: form.value.note
          };
          await axios.post('/api/maintenance', payload);
          showAdd.value = false;
          // 清空一部分欄位但保留日期
          form.value.item=''; form.value.unit=''; form.value.qty=null; form.value.amount=null; form.value.vendor=''; form.value.note='';
          await loadMaintenance();
        }

        async function remove(r){
          if(!confirm('確定刪除這筆保養紀錄？')) return;
          await axios.delete('/api/maintenance/' + r.id);
          await loadMaintenance();
        }

        // ✅ repairs 原始資料
        const repairs = ref([]);

        // ✅ computed：整理過的資料，給畫面用
        const repairRows = computed(() =>{
          const safe = (Array.isArray(repairs.value) ? repairs.value : []).map((x, idx) => ({
            id: x.repairRequestId ?? idx,
            date: x.date || "",
            issue: x.issue || "",
            status: x.status || "",
            costEstimate: x.costEstimate ?? null,
            note: x.note || ""
          }))
          console.log("📌 repairRows (computed):", safe);  // <<== 檢查整理後的
                    return safe;
        }
        );
                    

        // 只存原始回傳，不要再 map
        async function loadRepairs() {
          if (!selectedVehicleId.value) { repairs.value = []; return; }
          const res = await axios.get('/api/maintenance/repairs', {
            params: { vehicleId: selectedVehicleId.value }
          });
            console.log("📥 後端回來的 repairs 原始資料:", res.data);  // <<== 檢查原始回傳

          repairs.value = Array.isArray(res.data) ? res.data : [];
        }

        async function submitRepair(){
          if(!selectedVehicleId.value){ alert('請先選擇車輛'); return; }
          if(!repair.value.desc.trim()){ alert('請輸入故障描述'); return; }

          const plate = (vehicles.value.find(v=>v.vehicleId===selectedVehicleId.value)||{}).plate || null;

          const payload = {
            vehicleId: selectedVehicleId.value,
            plateNo: plate,
            date: repair.value.date,
            odometer: repair.value.odometer || null,
            issue: repair.value.desc,
            vendor: repair.value.vendor || null,
            costEstimate: repair.value.cost || null,
            note: repair.value.note || null
          };

          await axios.post('/api/maintenance/repair', payload);
          alert("✅ 報修已送出");
          // 狀態更新成「維修中」
          await axios.put(`/api/maintenance/vehicle/${selectedVehicleId.value}/status`, { status: "維修中" });

          // 重新載入報修紀錄 & 車輛狀態
          await loadRepairs();
          await loadVehicleDetail();

          // 清空表單
              repair.value = {
              date: toISO(today),
              place: '',
              desc: '',
              cost: null,
              contact: '',
              vendor: '',
              note: '',
              odometer: null
            };
        }

        onMounted(async ()=>{
          await loadVehicles();
          await loadMaintenance();
          await loadVehicleDetail();
          await loadRepairs();
        });

        return { vehicles, selectedVehicleId, tab, rows, showAdd, form,
                 vehicleDetail, loadVehicleDetail,setAvailable,
                 repair,repairs, repairRows, loadRepairs,showRepairAdd,
                 loadMaintenance, create, remove, submitRepair, fmtNum, fmtMoney };
      }
    }).mount('#app');
</script>
