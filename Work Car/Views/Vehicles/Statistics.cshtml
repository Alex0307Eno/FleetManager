@{
    ViewData["Title"] = "行車歷程統計";
    Layout = "_Layout";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
<link href="~/css/Vehicle/Statistics.css" rel="stylesheet" />
<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<div id="app" class="wrap" v-cloak>
    <div class="topbar">
        <h2 style="margin:0 0 12px 4px; color:#fff">車輛管理 ＞ 行車歷程統計</h2>
    </div>
    <!-- 分頁籤 -->
    <div class="tabs">
        <a class="tab" :class="{active: currentTab==='table'}" @@click ="currentTab='table'">行車歷程</a>
        <a class="tab" :class="{active: currentTab==='chart'}" @@click ="currentTab='chart'">統計圖</a>
    </div>

    <!-- 行車歷程表格 -->
    <div v-show="currentTab==='table'">
        <!-- 篩選列 -->
        <div class="filters">
            <div class="chip">
                <input type="date" v-model="q.dateFrom">
                <span>~</span>
                <input type="date" v-model="q.dateTo">
            </div>
            <div class="chip">
                <select v-model="q.driverId" @@change ="reload">
                    <option :value="null">駕駛人（全部）</option>
                    <option v-for="d in drivers" :key="d.id" :value="d.id">{{ d.name }}</option>
                </select>
            </div>
            <div class="chip"><input type="text" v-model.trim="q.plate" placeholder="車輛車號"></div>
            <div class="chip"><input type="text" v-model.trim="q.applicant" placeholder="申請人"></div>
            <div class="chip"><input type="text" v-model.trim="q.dept" placeholder="申請單位"></div>
            <button class="search-btn" @@click ="reload"><i class="fa-solid fa-magnifying-glass"></i></button>
        </div>

        <div class="card">
            <div class="card-bd table-wrap">
                <table>
                    <thead>
                        <tr>
                            <th>行車日期</th>
                            <th>駕駛人</th>
                            <th>車輛車號</th>
                            <th>申請單位</th>
                            <th>申請人</th>
                            <th>行駛里程</th>
                            <th>行駛趟次</th>
                            <th>長差/短差</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="r in rows" :key="r.id">
                            <td class="mono">{{ rocDate(r.driveDate) }}</td>
                            <td>{{ r.driverName }}</td>
                            <td><span class="badge">{{ r.plateNo }}</span></td>
                            <td>{{ shortDept(r.applicantDept) }}</td>
                            <td>{{ r.applicantName }}</td>
                            <td class="mono">{{ r.km }}</td>
                            <td class="mono">{{ r.trips }}</td>
                            <td>{{ r.longShort || '—' }}</td>
                        </tr>
                        <tr v-if="!rows.length">
                            <td colspan="8" style="text-align:center;color:#94a3b8;padding:16px">目前沒有資料</td>
                        </tr>
                    </tbody>
                    <tfoot v-if="rows.length">
                        <tr>
                            <td colspan="5" class="right">總計</td>
                            <td class="mono">{{ sumKm }}</td>
                            <td class="mono">{{ sumTrips }}</td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <!-- 統計圖 -->
    <div v-show="currentTab==='chart'">
        <div class="card" style="margin-top:14px; padding:20px">
            <div style="display:flex; gap:24px;">
                <div style="flex:1">
                    <h3 style="margin-bottom:12px">駕駛人行駛統計</h3>
                    <canvas id="driverChart" height="260"></canvas>
                </div>
                <div style="flex:1">
                    <h3 style="margin-bottom:12px">車輛行駛統計</h3>
                    <canvas id="vehicleChart" height="260"></canvas>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script>
        const { createApp, ref, computed, onMounted } = Vue;

        createApp({
          setup(){
            const currentTab = ref('table'); // 預設顯示表格
            const today = new Date();
            const pad = n=>String(n).padStart(2,'0');
            // 算出當月的 1 號
            const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
            // 算出當月的最後一天
            const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);
            const q = ref({
              dateFrom: `${firstDay.getFullYear()}-${pad(firstDay.getMonth() + 1)}-${pad(firstDay.getDate())}`,
              dateTo: `${lastDay.getFullYear()}-${pad(lastDay.getMonth() + 1)}-${pad(lastDay.getDate())}`,
              driverId: null,
              plate: '',
              applicant: '',
              dept: ''
            });            
            const rows = ref([]);
            const drivers = ref([]);
            const rocDate = d=>{
              const x=new Date(d); if(isNaN(x)) return '';
              return `${x.getFullYear()-1911}/${pad(x.getMonth()+1)}/${pad(x.getDate())}`;
            };
            function shortDept(dept){
              if(!dept) return '';
              const parts=dept.split('/').map(x=>x.trim()).filter(Boolean);
              if(parts.length<=2) return dept;
              return `${parts[0]} / ${parts[parts.length-1]}`;
            }

            const sumKm = computed(()=> rows.value.reduce((a,b)=>a+(Number(b.km)||0),0));
            const sumTrips = computed(()=> rows.value.reduce((a,b)=>a+(Number(b.trips)||0),0));

            async function reload(){
              const res = await axios.get('/Vehicles/TripStats',{ params:q.value });
              rows.value = Array.isArray(res.data) ? res.data : [];
              drawCharts();
                console.log("🚗 TripStats data:", res.data); 

            }

            async function loadDrivers(){
              const res = await axios.get('/Drivers/Records');
              drivers.value = (res.data||[]).map(x=>({ id:x.driverId||x.id, name:x.driverName||x.name }));
            }

                   let driverChart, vehicleChart;
        function drawCharts(){
          if(!rows.value.length) return;

          // ====== 駕駛：彙總 km / trips ======
          const drvAgg = {};
          rows.value.forEach(r => {
            const k = r.driverName || '(未指派)';
            if(!drvAgg[k]) drvAgg[k] = { km:0, trips:0 };
            drvAgg[k].km    += Number(r.km)    || 0;
            drvAgg[k].trips += Number(r.trips) || 0;
          });
          const driverLabels = Object.keys(drvAgg);
          const driverKm     = driverLabels.map(k => drvAgg[k].km);
          const driverTrips  = driverLabels.map(k => drvAgg[k].trips);

          const driverCtx = document.getElementById('driverChart');
          if (driverChart) driverChart.destroy();
          driverChart = new Chart(driverCtx, {
            type: 'bar',
            data: {
              labels: driverLabels,
              datasets: [
                { label: '里程 (km)', data: driverKm,   yAxisID: 'yKm',    backgroundColor: '#3b82f6' },
                { label: '趟次',      data: driverTrips,yAxisID: 'yTrips', backgroundColor: '#f59e0b' }
              ]
            },
            options: {
              responsive: true,
              plugins: { legend: { position: 'top' } },
              scales: {
                yKm:    { beginAtZero: true, title: { display:true, text:'公里' } },
                yTrips: { beginAtZero: true, position:'right',
                          grid: { drawOnChartArea:false },
                          title: { display:true, text:'趟次' } }
              }
            }
          });

          // ====== 車牌：彙總 km / trips ======
          const vehAgg = {};
          rows.value.forEach(r => {
            const k = r.plateNo || '(未指派)';
            if(!vehAgg[k]) vehAgg[k] = { km:0, trips:0 };
            vehAgg[k].km    += Number(r.km)    || 0;
            vehAgg[k].trips += Number(r.trips) || 0;
          });
          const plateLabels = Object.keys(vehAgg);
          const plateKm     = plateLabels.map(k => vehAgg[k].km);
          const plateTrips  = plateLabels.map(k => vehAgg[k].trips);

          const vehicleCtx = document.getElementById('vehicleChart');
          if (vehicleChart) vehicleChart.destroy();
          vehicleChart = new Chart(vehicleCtx, {
            type: 'bar',
            data: {
              labels: plateLabels,
              datasets: [
                { label: '里程 (km)', data: plateKm,   yAxisID: 'yKm',    backgroundColor: '#3b82f6' },
                { label: '趟次',      data: plateTrips,yAxisID: 'yTrips', backgroundColor: '#f59e0b' }
              ]
            },
            options: {
              responsive: true,
              plugins: { legend: { position: 'top' } },
              scales: {
                yKm:    { beginAtZero: true, title: { display:true, text:'公里' } },
                yTrips: { beginAtZero: true, position:'right',
                          grid: { drawOnChartArea:false },
                          title: { display:true, text:'趟次' } }
              }
            }
          });
        }


                   onMounted(async () => {
          const now = new Date();
          const start = new Date(now.getFullYear(), now.getMonth(), 1);
          const end   = new Date(now.getFullYear(), now.getMonth() + 1, 0);

          q.value.dateFrom = `${start.getFullYear()}-${pad(start.getMonth() + 1)}-${pad(start.getDate())}`;
          q.value.dateTo   = `${end.getFullYear()}-${pad(end.getMonth() + 1)}-${pad(end.getDate())}`;

          await reload();
          await loadDrivers();
        });

            return { currentTab, q, rows, drivers, reload, rocDate, shortDept, sumKm, sumTrips };
          }
        }).mount('#app');
    </script>
}
