<!DOCTYPE html>
<html lang="zh-Hant">

<head>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>公務車派車系統</title>
    <style>
        :root {
            --bg: #f7f8fa;
            --card: #fff;
            --border: #e5e7eb;
            --text: #111827;
            --muted: #6b7280;
            --chip: #eef2f7;
            --primary: #1e6fb8;
            --shadow: 0 1px 3px rgba(16,24,40,.08);
        }

        * {
            box-sizing: border-box
        }

        html, body {
            height: 100%
        }

        body {
            margin: 0;
            font-family: "Noto Sans TC","PingFang TC","Microsoft JhengHei",system-ui,Arial,sans-serif;
            background: var(--bg);
            color: var(--text)
        }

        .topbar {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 14px 22px;
            background: #fff;
            border-bottom: 1px solid var(--border);
            position: sticky;
            top: 0;
            z-index: 10
        }

        .nav {
            display: flex;
            gap: 22px;
            color: #6b7280
        }

            .nav a {
                color: inherit;
                text-decoration: none
            }

        .wrap {
            max-width: 1200px;
            margin: 24px auto;
            padding: 0 16px
        }

        .card {
            background: var(--card);
            border: 1px solid var(--border);
            border-radius: 10px;
            box-shadow: var(--shadow)
        }

        .card-hd {
            padding: 12px 16px;
            border-bottom: 1px solid var(--border);
            font-weight: 700
        }

        .card-bd {
            padding: 12px 16px
        }

        .grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 16px
        }

        @@media (max-width: 1000px) {
            .grid {
                grid-template-columns: 1fr
            }
        }

        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0 6px
        }

        thead th {
            font-weight: 600;
            color: #374151;
            font-size: 14px;
            text-align: left;
            padding: 8px 10px
        }

        tbody tr {
            background: #fff;
            border: 1px solid var(--border)
        }

        tbody td {
            padding: 10px 10px;
            border-top: 1px solid var(--border);
            border-bottom: 1px solid var(--border)
        }

        tbody tr:first-child td {
            border-top-left-radius: 8px;
            border-top-right-radius: 8px
        }

        tbody tr:last-child td {
            border-bottom-left-radius: 8px;
            border-bottom-right-radius: 8px
        }

        .chip {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: var(--chip);
            border: 1px solid var(--border);
            border-radius: 999px;
            padding: 4px 10px;
            font-size: 12px;
            color: #475569
        }

        .mono {
            font-variant-numeric: tabular-nums
        }

        .stack {
            display: grid;
            gap: 16px
        }

        .list {
            display: grid;
            gap: 8px
        }

        .list-row {
            display: flex;
            justify-content: space-between;
            border: 1px solid var(--border);
            border-radius: 8px;
            padding: 8px 10px;
            background: #fff
        }

        .map-card {
            width: 100%;
            height: 400px
        }

        #map {
            width: 100%;
            height: 100%
        }

        .map {
            height: 360px;
            border-top: 1px solid var(--border);
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
            background: linear-gradient(0deg,#e5e7eb 1px,transparent 1px),linear-gradient(90deg,#e5e7eb 1px,transparent 1px),#fafafa;
            background-size: 24px 24px,24px 24px;
            position: relative
        }

            .map::after {
                content: "地圖";
                position: absolute;
                right: 12px;
                bottom: 10px;
                color: #9ca3af;
                font-size: 12px
            }

        .actions {
            display: flex;
            gap: 6px;
            justify-content: center
        }

        .btn {
            border: 1px solid var(--border);
            background: #fff;
            border-radius: 8px;
            padding: 4px 8px;
            cursor: pointer
        }

        .btn-yes {
            color: #0f766e;
            border-color: #99f6e4;
            background: #ecfeff
        }

        .btn-no {
            color: #b91c1c;
            border-color: #fecaca;
            background: #fff1f2
        }
        /* 可視化 debug 區塊 */
        #debug {
            position: fixed;
            left: 12px;
            right: 12px;
            bottom: 12px;
            max-height: 40vh;
            overflow: auto;
            background: #0b1020;
            color: #d4e2ff;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 6px 18px rgba(0,0,0,.3);
            z-index: 99999;
            font-size: 12px;
            white-space: pre-wrap
        }

        .modal-backdrop {
            position: fixed;
            inset: 0;
            background: rgba(0,0,0,.6);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
        }

        .modal {
            background: #fff;
            width: 600px;
            max-width: 90%;
            border-radius: 10px;
            padding: 16px;
            box-shadow: 0 10px 30px rgba(0,0,0,.25);
        }

        .btn-link {
            background: none;
            border: 0;
            cursor: pointer;
        }
    </style>

</head>
<body>
    <main id="dashboard" class="wrap">
        <div class="grid">
            <section>
                <div class="card">
                    <div class="card-hd">
                        今日排班情形（@DateTime.Now.ToString("yyyy/M/d dddd", new System.Globalization.CultureInfo("zh-TW"))）
                    </div>
                    <div class="card-bd">
                        <table>
                            <thead>
                                <tr>
                                    <th>駕駛人</th>
                                    <th>排班狀態</th>
                                    <th>目前任務</th>
                                    <th>組室</th>
                                    <th>申請人</th>
                                    <th>人數</th>
                                    <th>累計行駛里程</th>
                                    <th>目前位置</th>
                                    <th>車輛</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="s in schedules" :key="s.key">
                                    <td>{{ s.driverName || '-' }}</td>
                                    <td>{{ s.hasDispatch ? '已派工' : '待派車' }}</td>
                                    <td>{{ s.route || '無任務' }}</td>
                                    <td>{{ s.applicantDept || '-' }}</td>
                                    <td>{{ s.applicantName || '-' }}</td>
                                    <td>{{ s.passengerCount ?? '-' }}</td>
                                    <td>{{ (s.tripDistance || '').replace('公里','') || '-' }}</td>
                                    <td>
                                        <button type="button" class="btn btn-link p-0" @@click="openMap(s)">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 384 512">
                                                <!-- 外針 -->
                                                <path fill="red" d="M192 0C86 0 0 86 0 192c0 96 144 320 192 320s192-224 192-320C384 86 298 0 192 0z" />
                                                <!-- 內圓 -->
                                                <circle cx="192" cy="192" r="48" fill="black" />
                                            </svg>
                                        </button>
                                    </td>



                                    <td>{{ s.plateNo ? s.plateNo.replace(/\D/g, '') : '-' }}</td>
                                </tr>
                                <tr v-if="!schedules.length">
                                    <td colspan="9" style="text-align:center;color:#999;padding:8px">今天沒有排班資料</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="map-card">
                        <div id="map" class="map"></div>
                    </div>
                </div>
            </section>

            <aside class="stack">
                <div class="card">
                    <div class="card-hd">今日未完成任務</div>
                    <div class="card-bd list">
                        <div v-for="u in unfinished" :key="u.driverName + '_' + u.useTime + '_' + u.route" class="list-row">
                            <span>{{ u.driverName }}：{{ u.route }}</span>
                            <span class="mono">{{ u.useTime }}</span>
                        </div>
                        <div v-if="unfinished.length === 0" style="color:#999">目前沒有未完成任務</div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-hd">今日待審核派車申請</div>
                    <div class="card-bd">
                        <table style="border-collapse:collapse;width:100%">
                            <thead>
                                <tr style="color:#374151;font-size:14px">
                                    <th style="text-align:left;padding:6px 8px">申請人</th>
                                    <th style="text-align:left;padding:6px 8px">派車時間</th>
                                    <th style="text-align:left;padding:6px 8px">派車地點</th>
                                    <th style="text-align:center;padding:6px 8px">審核</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="p in pending" :key="p.applicantName + '_' + p.useTime" style="background:#fff;border-top:1px solid var(--border)">
                                    <td style="padding:8px 8px">{{ p.applicantName }}</td>
                                    <td style="padding:8px 8px" class="mono">{{ p.useTime }}</td>
                                    <td style="padding:8px 8px">{{ p.route }}</td>
                                    <td style="padding:8px 8px" class="actions">
                                        <button class="btn btn-yes" @@click="approve(p)">✓</button>
                                        <button class="btn btn-no" @@click="reject(p)">✕</button>
                                    </td>
                                </tr>
                                <tr v-if="pending.length === 0">
                                    <td colspan="4" style="text-align:center;color:#999;padding:10px">沒有待審核申請</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <section class="wrap">
                        <div style="display:flex;align-items:center;justify-content:space-between;margin-bottom:8px;">
                            <h3 style="margin:0;">目前各車輛位置</h3>
                            <button class="btn" @@click="refreshLive">立即更新</button>
                        </div>

                        <div style="display:grid;grid-template-columns:repeat(3,1fr);gap:16px;">
                            <div v-for="d in liveDrivers" :key="d.driverId" class="card" style="overflow:hidden;border-radius:12px;">
                                <div style="position:relative;width:100%;height:260px;background:#f3f4f6;">
                                    <!-- ✅ 只能用 iframe 來嵌入 Maps Embed API -->
                                    <iframe v-if="mapUrlFor(d)"
                                            :src="mapUrlFor(d)"
                                            style="width:100%;height:100%;border:0"
                                            allowfullscreen
                                            loading="lazy"
                                            referrerpolicy="no-referrer-when-downgrade"></iframe>
                                    <div v-else style="display:flex;align-items:center;justify-content:center;height:100%;color:#6b7280;">
                                        無定位資訊
                                    </div>

                                    <!-- 左下角資訊條 -->
                                    <div style="position:absolute;left:8px;bottom:8px;display:flex;gap:8px;">
                                        <span style="background:rgba(0,0,0,.85);color:#fff;border-radius:8px;padding:4px 8px;">
                                            {{ d.plateNo || '—' }} {{ d.driverName || '' }}
                                        </span>
                                        <span :style="chipStyle(d.status)">{{ d.status || '—' }}</span>
                                    </div>
                                </div>
                                <div style="padding:8px 12px;font-size:12px;color:#6b7280;display:flex;justify-content:space-between;">
                                    <span>更新：{{ formatTime(d.updatedAt) }}</span>
                                    <a href="javascript:void(0)" @@click="openMap(d)">放大查看</a>
                                </div>
                            </div>
                        </div>
                    </section>

                    <!-- 地圖 Modal -->
                    <div v-if="showMap" class="modal-backdrop" @@click.self="showMap = false">
                        <div class="modal">
                            <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:8px;">
                                <strong>駕駛 {{ currentDriver?.driverName || '' }} 的即時定位</strong>
                                <button class="btn" @@click="showMap=false">✕</button>
                            </div>

                            
                            
                            <div style="font-size:12px;color:#6b7280;margin-bottom:6px;">
                                金鑰：{{ GOOGLE_MAPS_KEY ? '已設定' : '未設定' }}
                            </div>
                            <iframe v-if="mapSrc"
                                    :src="mapSrc"
                                    style="width:100%; height:400px; border:0"
                                    allowfullscreen
                                    loading="lazy"
                                    referrerpolicy="no-referrer-when-downgrade"></iframe>


                            <div v-else style="color:#b91c1c; padding:8px;">
                                無定位資訊（沒有座標也沒有可搜尋的地點字串）
                            </div>
                        </div>
                    </div>




                </div>
            </aside>
        </div>
    </main>

    <pre id="debug">🟦 Debug console ready…</pre>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
    <script>
        // Razor 注入：請確保 ViewBag.GoogleMapsKey 有值
        window.GOOGLE_MAPS_KEY = window.GOOGLE_MAPS_KEY || @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.GoogleMapsKey ?? ""));
    </script>


    <script>
        

        // 攔截 console 到下方 debug 區塊
        (function () {
          const dbg = document.getElementById('debug');
          function toText(v){ try{ return typeof v==='string'? v: JSON.stringify(v,null,2);}catch{return String(v)} }
          function write(prefix, args, pipe){ dbg.textContent += prefix+' '+Array.from(args).map(toText).join(' ')+'\n'; dbg.scrollTop = dbg.scrollHeight; try{pipe.apply(console,args);}catch{} }
          const _log=console.log,_err=console.error,_warn=console.warn;
          console.log=function(){write('🟢',arguments,_log)}; console.warn=function(){write('🟡',arguments,_warn)}; console.error=function(){write('🔴',arguments,_err)};
          window.addEventListener('error', e=>console.error('window.error:', e.message, e.error));
          window.addEventListener('unhandledrejection', e=>console.error('unhandledrejection:', e.reason));
        })();
    </script>

    <script>
        const { createApp, ref, onMounted, computed, nextTick, watch} = Vue;

        createApp({
          setup(){
            const schedules  = ref([]);
            const unfinished = ref([]);
            const pending    = ref([]);

            const showMap = ref(false);
            const currentDriver = ref(null);

            function toNumOrNull(v){
              const n = Number(v);
              return Number.isFinite(n) ? n : null;
            }

            function normalizeSchedules(list){
              return (list || []).map(x => ({
                key: `${x.scheduleId ?? (x.driverId ?? 'X')}_${x.shift ?? ''}`,
                driverName: x.driverName ?? '-',
                hasDispatch: !!x.hasDispatch,
                status: x.hasDispatch ? '已派工' : '待派車',
                route: x.route ?? (x.hasDispatch ? '已派工(無路線)' : '無任務'),
                applicantDept: x.applicantDept ?? '-',
                applicantName: x.applicantName ?? '-',
                passengerCount: x.passengerCount ?? '-',
                tripDistance: x.tripDistance ?? '-',
                lat: toNumOrNull(x.lat),
                lng: toNumOrNull(x.lng),
                location: (x.location ?? '').trim(),
                plateNo: x.plateNo ?? '-',
                startTime: x.startTime,
                endTime: x.endTime
              }));
            }

            // 只用 Embed API（iframe）。有座標用 view，否則用 place 搜尋字串。
                     const mapSrc = computed(() => {
          const d = currentDriver.value;
          if (!d) return "";

          const lat = Number(d.lat);
          const lng = Number(d.lng);

          const latOk = Number.isFinite(lat) && lat >= -90 && lat <= 90;
          const lngOk = Number.isFinite(lng) && lng >= -180 && lng <= 180;

          // ✅ 避免 0,0
          if (latOk && lngOk && !(lat === 0 && lng === 0)) {
            return `https://www.google.com/maps/embed/v1/view?key=${window.GOOGLE_MAPS_KEY}&center=${lat.toFixed(6)},${lng.toFixed(6)}&zoom=15&maptype=roadmap`;
          }

          // fallback：用地點文字
          const q = (d.location || d.route || d.applicantDept || d.applicantName || "").trim();
          return q
            ? `https://www.google.com/maps/embed/v1/place?key=${window.GOOGLE_MAPS_KEY}&q=${encodeURIComponent(q)}`
            : "";
        });



            // 點駕駛的針：開地圖
            function openMap(driver){
              currentDriver.value = driver || {};
              showMap.value = true;
              nextTick(() => {
                console.log("🗺 currentDriver:", currentDriver.value);
                console.log("🔗 mapSrc:", mapSrc.value);
              });
            }

            // 一鍵顯示「我的現在位置」
            function showMyLocation(){
              if (!navigator.geolocation) { alert('此瀏覽器不支援定位'); return; }
              navigator.geolocation.getCurrentPosition(
                (pos)=>{
                  const lat = Number(pos.coords.latitude);
                  const lng = Number(pos.coords.longitude);
                  currentDriver.value = { driverName:'我的位置', lat, lng, location:'目前位置' };
                  showMap.value = true;
                },
                (err)=>{
                  console.error('定位失敗：', err);
                  alert('定位失敗：' + err.message + '\n請確認已允許定位權限，並以 HTTPS 或 localhost 存取本站');
                },
                { enableHighAccuracy:true, timeout:10000, maximumAge:30000 }
              );
            }

            // 也可以改成：只要 showMap=true 就自動抓自己的位置
            // watch(showMap, (val)=>{ if(val && !currentDriver.value){ showMyLocation(); } });

            async function get(url){
              const res = await axios.get(url);
              return res.data;
            }

            async function loadAll(){
              try{
                const [s, u, p] = await Promise.all([
                  get('/api/dashboard/schedule/today'),
                  get('/api/dashboard/dispatch/uncomplete'),
                  get('/api/dashboard/applications/pending')
                ]);
                schedules.value  = normalizeSchedules(s);
                unfinished.value = u || [];
                pending.value    = p || [];
              }catch(err){ console.error('載入失敗：', err); }
            }

            function approve(item){ console.log('審核通過(示意)：', item); }
            function reject(item){ console.log('駁回(示意)：', item); }

            onMounted(loadAll);

            return {
              schedules, unfinished, pending, approve, reject,
              showMap, currentDriver, openMap, showMyLocation, mapSrc,
              
            };
          }
        }).mount('#dashboard');
    </script>

    @* <script async defer src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.GoogleMapsKey&callback=initMap"></script> *@
    
</body>
</html>
